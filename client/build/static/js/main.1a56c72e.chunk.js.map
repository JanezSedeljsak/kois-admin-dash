{"version":3,"sources":["images/user.png","images/scvlogo.png","images/koislogo.png","history.js","common/routewrapper.js","containers/Home.js","common/apimethods.js","containers/Login.js","common/buttonlink.js","containers/Points.js","containers/Admins.js","common/modal.js","forms/fPoint.js","forms/fAdmin.js","detailed/dpoint.js","common/router.js","common/logos.js","common/link.js","navs/isauth.js","navs/nonauth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","RouteWrapper","Component","component","isPrivate","rest","signed","localStorage","getItem","to","defaultProps","name","email","password","_AUTH","Promise","resolve","reject","a","async","axios","post","headers","then","catch","get","id","data","JSON","stringify","error","delete","useEffect","React","useState","props","useHistory","form","setForm","removeItem","validateForm","test","length","className","for","type","value","minLength","onChange","event","target","icon","shape","onClick","_api","login","status","Swal","fire","title","push","window","location","reload","setItem","token","disabled","link","css","size","Meta","Card","points","setPoints","getPoints","response","style","display","flexFlow","position","map","index","tabs","_id","key","hoverable","flex","margin","cover","src","images","float","marginLeft","href","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deletePoint","admins","setAdmins","getUsers","getAdmins","itemLayout","dataSource","renderItem","item","Item","avatar","UserIcon","description","content","toggle","visibility","confirm","visible","onOk","onCancel","cancelButtonProps","width","modal","setModalVisibility","modalIndex","setModalIndex","updateIndex","setUpdateIndex","lat","lng","setPosition","setTabs","pointForm","setPointForm","handleLocationChange","address","places","url","substr","lastIndexOf","getPoint","responseLocation","lon","toggleModal","includes","validatePointForm","validFileds","Object","values","filter","containerElement","height","mapElement","defaultPosition","getModalContent","split","tabsUpdate","minWidth","htmlType","color","actions","tabForEdit","join","openEditTabModal","itemIndex","deleteTab","updatePoint","createPoint","register","Option","Select","point","setPoint","dropDownIndex","setDropDownIndex","userCreated","setUserCreated","userUpdated","setUserUpdated","getUser","idUser","whichUser","_doc","openedTab","drawMarker","createdData","moment","createdAt","format","updatedAt","defaultValue","tab","data-ride","image","i","alt","role","data-slide","aria-hidden","marginTop","stlye","padding","dangerouslySetInnerHTML","__html","replace","flexDirection","alignItems","justifyContent","class","_R","path","Login","authRequired","Points","Admins","Home","marginBottom","KoisLogo","paddingBottom","ScvLogo","theme","background","mode","Header","Layout","Content","Footer","Sider","Title","Typography","Boolean","hostname","match","ReactDOM","render","collapsed","setCollapsed","undefined","isAuth","setAuth","document","querySelectorAll","forEach","addEventListener","firstChild","KoisHistory","minHeight","collapsible","onCollapse","borderLeft","boxShadow","textAlign","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a56c72e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.a9210b59.png\";","module.exports = __webpack_public_path__ + \"static/media/scvlogo.001b21b6.png\";","module.exports = __webpack_public_path__ + \"static/media/koislogo.e5789706.png\";","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function RouteWrapper({\r\n    component: Component,\r\n    isPrivate,\r\n    ...rest\r\n}) {\r\n    const signed = localStorage.getItem('_kToken');\r\n    return (isPrivate && !signed) ? <Redirect to=\"/login\" /> : <Route {...rest} component={Component} />\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n    isPrivate: PropTypes.bool,\r\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n    isPrivate: false\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nexport default function() {\r\n\r\n  return (\r\n    <h1>\r\n        Welcome to Kois\r\n    </h1>\r\n  );\r\n}","import axios from 'axios';\r\n\r\n// if development mode use another separate server for api\r\nconst _API_ = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? 'localhost:5000' : '';\r\n\r\nexport default class {\r\n    static async register({ name, email, password, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/user`, { name, email, password  }, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n\r\n    static async login({ email, password }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/login`, {\r\n                email: email,\r\n                password: password\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n\r\n    static async getUsers(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/auth/user`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n\r\n\r\n    static async getUser({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/auth/user/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n\r\n\r\n    static async createPoint({ data, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/common/point`, JSON.stringify({data: data}), {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(() => resolve({ error: true }));\r\n        });\r\n    }\r\n\r\n\r\n    static async getPoints(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/common/point`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    static async getPoint({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/common/point/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n\r\n\r\n    static async updatePoint({ id, data, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/common/point/${id}`, JSON.stringify({data: data}), {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(() => resolve({ error: true }));\r\n        });\r\n    }\r\n\r\n    \r\n    static async deletePoint({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.delete(`${_API_}/api/common/point/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(resolve);\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nexport default (props) => {\r\n    const history = useHistory();\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const useMountEffect = (fun) => useEffect(fun, []);\r\n    useMountEffect(() => {\r\n        localStorage.removeItem('_kToken');\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { email , password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) && password.length > 4;\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        if (!validateForm()) return;\r\n        const login = await _api.login(form);\r\n        if (login.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Prijava je bila uspešna!'\r\n            }).then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload();\r\n            });\r\n            localStorage.setItem('_kToken', login.data.token);\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Prijava ni bila uspešna!'\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ email: event.target.value, password: form.password })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ email: form.email, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleLogin}\r\n                disabled={!validateForm()}\r\n            >Prijava\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function({ title, link, icon, css, shape }) {\r\n  return (\r\n    <>\r\n      <Link to={link}>\r\n        <Button type={css || 'primary'} icon={icon} shape={shape || 'round'} size={\"large\"} >\r\n            {title}\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Tooltip, Spin } from \"antd\";\r\nimport KoisLink from \"./../common/buttonlink\";\r\nimport _api from \"./../common/apimethods\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function () {\r\n    const [points, setPoints] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPoints();\r\n    }, []);\r\n\r\n    async function getPoints() {\r\n        const token = localStorage.getItem(\"_kToken\");\r\n        const response = await _api.getPoints(token);\r\n        if (response.status == 200) {\r\n            setPoints(response.data);\r\n        }\r\n    }\r\n\r\n    async function deletePoint(id) {\r\n        const _AUTH = localStorage.getItem(\"_kToken\");\r\n        Swal.fire({\r\n            title: 'Ali ste prepričani?',\r\n            text: \"Točko boste popolnoma odstranili iz kois sistema!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Da odstrani jo!'\r\n        }).then(async (result) => {\r\n            if (result.value) {\r\n                const response = await _api.deletePoint({ id, _AUTH });\r\n                if (response.status == 200) {\r\n                    Swal.fire(\r\n                        'Uspešno odstranjeno!',\r\n                        'Točka je bila odstranjena.',\r\n                        'success'\r\n                    );\r\n                    getPoints();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    if (points) {\r\n        return (\r\n            <>\r\n                <KoisLink\r\n                    {...{ title: \"Dodaj točko\", link: \"/new/point\", icon: \"plus\" }}\r\n                />\r\n                <hr />\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"row wrap\",\r\n                        position: \"relative\"\r\n                    }}\r\n                >\r\n                    {points.map(({ tabs, _id }, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            hoverable\r\n                            style={{\r\n                                flex: \"0 1 calc(25% - 16px)\",\r\n                                margin: \"8px\"\r\n                            }}\r\n                            cover={\r\n                                <img src={tabs[0].images[0]} />\r\n                            }\r\n                        >\r\n                            <Meta title={tabs[0].title} />\r\n                            <hr />\r\n                            <Tooltip title=\"Podroben ogled\">\r\n                                <Button\r\n                                    style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                                    type=\"secondary\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"fullscreen\"\r\n                                    size={\"large\"}\r\n                                    href={`/details/point/${_id}`}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Uredi\">\r\n                                <Button\r\n                                    style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                                    type=\"primary\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"edit\"\r\n                                    size={\"large\"}\r\n                                    href={`/edit/point/${_id}`}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Odstrani točko\">\r\n                                <Button\r\n                                    style={{ float: \"right\" }}\r\n                                    type=\"danger\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"delete\"\r\n                                    size={\"large\"}\r\n                                    onClick={() => deletePoint(_id)}\r\n                                />\r\n                            </Tooltip>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return <><Spin size=\"large\" /></>\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { List, Avatar, Button, Spin } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport _api from './../common/apimethods';\r\nimport UserIcon from './../images/user.png';\r\n\r\nexport default function () {\r\n    const [admins, setAdmins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAdmins();\r\n    }, []);\r\n\r\n    async function getAdmins() {\r\n        const token = localStorage.getItem('_kToken');\r\n        const response = await _api.getUsers(token);\r\n        if (response.status == 200) {\r\n            setAdmins(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    if (admins) {\r\n        return (\r\n            <>\r\n                <KoisLink {...{ title: \"Dodaj administratorja\", link: '/new/admin', icon: 'plus' }} />\r\n                <hr />\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={admins}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src={UserIcon} />\r\n                                }\r\n                                title={item.name}\r\n                                description={item.email}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        return <><Spin size=\"large\" /></>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nexport default function ({ content, toggle, visibility, title, confirm }) {\r\n    return (\r\n        <Modal\r\n            title={title}\r\n            visible={visibility}\r\n            onOk={confirm ? confirm : toggle}\r\n            onCancel={toggle}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            width={\"50vw\"}\r\n        >{content}</Modal>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Modal, List, Avatar, Tooltip, Spin } from \"antd\";\r\nimport LocationPicker from \"react-location-picker\";\r\nimport KoisModal from './../common/modal';\r\nimport Swal from 'sweetalert2';\r\nimport _api from './../common/apimethods';\r\n\r\nexport default function ({ type }) {\r\n    const [modal, setModalVisibility] = useState(false);\r\n    const [modalIndex, setModalIndex] = useState(null);\r\n    const [updateIndex, setUpdateIndex] = useState(null);\r\n    const [position, setPosition] = useState({ lat: 46.4441, lng: 15.197 });\r\n    const [tabs, setTabs] = useState([]);\r\n    const [pointForm, setPointForm] = useState({\r\n        title: '',\r\n        images: '',\r\n        description: ''\r\n    });\r\n\r\n\r\n\r\n    const handleLocationChange = ({ position, address, places }) => {\r\n        setPosition(position);\r\n    };\r\n\r\n    const getPoint = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const response = await _api.getPoint({ id, _AUTH });\r\n        if (response.status == 200) {\r\n            const responseLocation = response.data.location;\r\n            setTabs(response.data.tabs);\r\n            setPosition({ lat: responseLocation.lat, lng: responseLocation.lon })\r\n        }\r\n    }\r\n\r\n    useEffect(() => (type == 'edit') ? getPoint() : null, []);\r\n\r\n    const toggleModal = () => { \r\n        if (['pointForm', 'updatePointForm'].includes(modalIndex) && modal == true) {\r\n            setPointForm({\r\n                title: '',\r\n                images: '',\r\n                description: ''\r\n            });\r\n        }\r\n        setModalVisibility(!modal);\r\n    }\r\n\r\n    const hanldeOK = () => {\r\n        if (['pointForm', 'updatePointForm'].includes(modalIndex)) {\r\n            let { title, images, description } = pointForm;\r\n            images = images.split('\\n');\r\n            if(validatePointForm()) {\r\n                if (modalIndex == 'pointForm') {\r\n                    setTabs([...tabs, { title, description, images }]);\r\n                    setPointForm({\r\n                        title: '',\r\n                        images: '',\r\n                        description: ''\r\n                    });\r\n                } else {\r\n                    const tabsUpdate = tabs;\r\n                    tabsUpdate[updateIndex] = { title, description, images };\r\n                    setTabs([...tabsUpdate]);\r\n                    setPointForm({\r\n                        title: '',\r\n                        images: '',\r\n                        description: ''\r\n                    });\r\n                }\r\n\r\n                setModalVisibility(false);\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Obrazca niste pravilno izpolnili!'\r\n                });\r\n            }\r\n\r\n        } else setModalVisibility(false);\r\n    };\r\n\r\n\r\n    const validatePointForm = () => {\r\n        const validFileds = Object.values(pointForm).filter(item => item.length).length;\r\n        return Object.values(pointForm).length == validFileds;\r\n    }\r\n\r\n    const getPointFormModal = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Naslov</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={pointForm.title}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, title: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Povezave slik</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.images}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, images: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Opis</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.description}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, description: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const getLocationFormModal = () => {\r\n        return (<LocationPicker\r\n            containerElement={<div style={{ height: \"100%\" }} />}\r\n            mapElement={<div style={{ height: \"400px\" }} />}\r\n            defaultPosition={position}\r\n            onChange={handleLocationChange}\r\n        />);\r\n    }\r\n\r\n    const editPrimarySubmit = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const data = {\r\n            location: { ...position, lon: position.lng },\r\n            tabs: tabs\r\n        };\r\n        const response = await _api.updatePoint({ id, data, _AUTH })\r\n        if (response.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Točka je bila uspešno posodobljena!'\r\n            });\r\n        }\r\n    }\r\n\r\n    const addPrimarySubmit = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const data = {\r\n            location: { ...position, lon: position.lng },\r\n            tabs: tabs\r\n        };\r\n        const response = await _api.createPoint({ data, _AUTH})\r\n        if (response.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Točka je bila uspešno dodana!'\r\n            });\r\n            setTabs([]);\r\n        }\r\n    }\r\n\r\n    const getModalContent = () => {\r\n        switch (modalIndex) {\r\n\r\n            case 'locationPicker':\r\n                return getLocationFormModal();\r\n\r\n            case 'pointForm':\r\n            case 'updatePointForm':\r\n                return getPointFormModal();\r\n\r\n            default:\r\n                return '<p>Prišlo je do napake!</p>'\r\n        }\r\n    }\r\n\r\n    const getModalTitle = {\r\n        'pointForm': 'Dodaj zavihek',\r\n        'updatePointForm': 'Posodobi zavihek',\r\n        'locationPicker': 'Izbirnik lokacije'\r\n    }\r\n\r\n\r\n    const openEditTabModal = index => {\r\n        setUpdateIndex(index);\r\n        toggleModal(true); \r\n        setModalIndex('updatePointForm');\r\n        const tabForEdit = tabs[index];\r\n        setPointForm({ ...tabForEdit, images: tabForEdit.images.join('\\n') })\r\n\r\n    }\r\n\r\n    const deleteTab = index => {\r\n        Swal.fire({\r\n            title: 'Ali ste prepričani?',\r\n            text: \"Zavihek boste popolnoma odstranili iz točke!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Da!'\r\n          }).then(async (result) => {\r\n            if (result.value) {\r\n                setTabs([...tabs.filter((item, itemIndex) => itemIndex != index)]);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    if (type == \"edit\" && !tabs) {\r\n        return <><Spin size=\"large\" /></>\r\n    } else {\r\n        return !modal ? (\r\n            <Form style={{ minWidth: \"50%\" }}>\r\n                <Form.Item>\r\n                    <Button\r\n                        onClick={() => { toggleModal(true); setModalIndex('locationPicker'); }}\r\n                        icon=\"select\"\r\n                        shape=\"round\"\r\n                        htmlType=\"button\"\r\n                        className=\"login-form-button\"\r\n                    >\r\n                        Izberi lokacijo\r\n                    </Button>\r\n                    <span>\r\n                        {\" \"}\r\n                        <Icon type=\"environment\" style={{ color: \"#66c\" }} /> zemljepisna dolžina:\r\n                        <b>{position.lng}</b> zemljepisna širina:{\" \"}\r\n                        <b>{position.lat}</b>\r\n                    </span>\r\n                    <hr />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button icon=\"plus\" shape=\"round\" onClick={() => { toggleModal(true); setModalIndex('pointForm'); }}>\r\n                        Dodaj zavihek\r\n                    </Button>\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={tabs}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item \r\n                                actions={[\r\n                                    <Tooltip title=\"Uredi zavihek\">\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            shape=\"circle\"\r\n                                            icon=\"edit\"\r\n                                            size={\"large\"}\r\n                                            onClick={() => openEditTabModal(index)}\r\n                                        />\r\n                                    </Tooltip>,\r\n                                    <Tooltip title=\"Odstrani zavihek\">\r\n                                        <Button\r\n                                            type=\"danger\"\r\n                                            shape=\"circle\"\r\n                                            icon=\"delete\"\r\n                                            size={\"large\"}\r\n                                            onClick={() => deleteTab(index)}\r\n                                        />\r\n                                    </Tooltip>\r\n                                ]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    avatar={\r\n                                        <Avatar src={item.images[0]} />\r\n                                    }\r\n                                    title={item.title}\r\n                                    description={(item.description.length > 100 ? item.description.substr(0,100) : item.description) + \"...\"}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    <hr />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        onClick={type == \"edit\" ? editPrimarySubmit : addPrimarySubmit}\r\n                        type=\"primary\"\r\n                        icon=\"environment\"\r\n                        shape=\"round\"\r\n                        htmlType=\"submit\"\r\n                        className=\"login-form-button\"\r\n                    >\r\n                        {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        ) : (\r\n            <KoisModal {...{\r\n                title: getModalTitle[modalIndex],\r\n                content: getModalContent(modalIndex),\r\n                visibility: modal,\r\n                toggle: toggleModal,\r\n                confirm: hanldeOK\r\n            }} />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst { useState } = React;\r\n\r\nexport default () => {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { name, email, password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) \r\n            && password.length > 4\r\n            && name.length > 4;\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        if (!validateForm()) return;\r\n        const _AUTH = localStorage.getItem(\"_kToken\");\r\n        const register = await _api.register({...form, _AUTH });\r\n        if (register.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Uporabnik je bil uspešno dodan!'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"name\" className=\"bmd-label-floating\">Ime & Priimek</label>\r\n                <input \r\n                    id=\"name\"\r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={form.name} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, name: event.target.value  })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, email: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ ...form, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleRegister}\r\n                disabled={!validateForm()}\r\n            >Registracija\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button, Select, Spin  } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport _api from './../common/apimethods';\r\nimport map from 'svg-world-map';\r\nimport stringify from 'virtual-dom-stringify';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function () {\r\n    const [point, setPoint] = useState(null);\r\n    const [dropDownIndex, setDropDownIndex] = useState(0);\r\n    const [userCreated, setUserCreated] = useState(null);\r\n    const [userUpdated, setUserUpdated] = useState(null);\r\n\r\n    async function getPoint() {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const response = await _api.getPoint({ id, _AUTH });\r\n        if (response.status == 200) {\r\n            getUser(response.data.userUpdated, 'updated');\r\n            getUser(response.data.userCreated, 'created');\r\n            setPoint(response.data);\r\n        }\r\n    }\r\n\r\n    async function getUser(idUser, whichUser) {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const response = await _api.getUser({ id: idUser, _AUTH });\r\n        if (response.status == 200) {\r\n            if (whichUser == 'created') setUserCreated(response.data._doc.name);\r\n            else setUserUpdated(response.data._doc.name);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPoint();\r\n    }, []);\r\n\r\n    if (point) {\r\n        const { tabs } = point;\r\n        const openedTab = tabs[dropDownIndex];\r\n        const { lat, lon } = point.location;\r\n        const drawMarker = map(lon, lat);\r\n        const createdData = [{\r\n                key: \"Točka je bila ustvarjena:\",\r\n                value: moment(point.createdAt).format('DD. MM. YYYY')\r\n            }, {\r\n                key: \"Točko je ustvarjil/a:\",\r\n                value: userCreated\r\n            }, {\r\n                key: \"Točka je bila posodobljena:\",\r\n                value: moment(point.updatedAt).format('DD. MM. YYYY')\r\n            },{\r\n                key: \"Točko je posodobil/a:\",\r\n                value: userUpdated\r\n        }];\r\n        return (\r\n            <>\r\n                {(tabs.length > 1) && (\r\n                    <>\r\n                        <div>\r\n                            <Select defaultValue={tabs[0].title} style={{ width: \"100%\" }} onChange={setDropDownIndex}>\r\n                                {tabs.map((tab, index) => (\r\n                                    <Option value={index}>{tab.title}</Option>\r\n                                ))}\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <hr/>\r\n                    </>\r\n                )}\r\n    \r\n                <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\" style={{ height: \"70vh\" }}>\r\n\r\n                        {openedTab.images.map((image, i) => (\r\n                            <div className={`carousel-item ${i == 0 ? \"active\" : \"\"}`}>\r\n                                <img className=\"d-block w-100\" src={image} alt=\"Kois Image\" />\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n\r\n                    {(openedTab.images.length > 1) && (\r\n                        <>\r\n                            <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Previous</span>\r\n                            </a>\r\n                            <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Next</span>\r\n                            </a>\r\n                        </>\r\n                    )}\r\n \r\n                </div>\r\n    \r\n                <h1 style={{ marginTop: 20 }}>{openedTab.title}</h1>\r\n                <hr />\r\n                <span \r\n                    stlye={{ padding: 30 }} \r\n                    dangerouslySetInnerHTML={{ __html: openedTab.description.replace(/\\n/g, \"<br />\")}} \r\n                />\r\n                <hr />\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\"\r\n                }}>\r\n                    <div style={{ margin: 20, width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <ul class=\"list-group\">\r\n                            {createdData.map(item => (\r\n                                <a class=\"list-group-item\">\r\n                                    <div class=\"bmd-list-group-col\">\r\n                                        <p class=\"list-group-item-heading\">{item.key}</p>\r\n                                        <p class=\"list-group-item-text\"><b>{item.value}</b></p>\r\n                                    </div>\r\n                                </a>   \r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div \r\n                        style={{ margin: 20, width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                        dangerouslySetInnerHTML={{ __html: stringify(drawMarker)}} \r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return <><Spin size=\"large\" /></>\r\n    }\r\n}\r\n","import { Router, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Route from './routewrapper';\r\n\r\n//rotes import\r\nimport Home from \"./../containers/Home\";\r\nimport Login from \"./../containers/Login\";\r\nimport Points from \"./../containers/Points\";\r\nimport Admins from \"./../containers/Admins\";\r\n\r\n//import forms\r\nimport FPoint from \"./../forms/fPoint\";\r\nimport FAdmin from \"./../forms/fAdmin\";\r\n\r\n//import detail views\r\nimport DPoint from \"./../detailed/dpoint\";\r\n\r\nexport default function () {\r\n    const _R = [\r\n        // auth route\r\n        { path: \"/login\", component: <Login />, authRequired: false },\r\n\r\n        // common routes\r\n        { path: \"/points\", component: <Points />, authRequired: true },\r\n        { path: \"/admins\", component: <Admins />, authRequired: true },\r\n\r\n        // form routes\r\n        { path: \"/new/point\", component: <FPoint {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/new/admin\", component: <FAdmin {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/edit/point/:id\", component: <FPoint {...{ type: \"edit\" }} />, authRequired: true },\r\n\r\n        // detailed view routes\r\n        { path: \"/details/point/:id\", component: <DPoint />, authRequired: true },\r\n\r\n        // home route\r\n        { path: '', component: <Home />, authRequired: false },\r\n    ];\r\n\r\n    return (\r\n        <Switch>\r\n            {_R.map(({ path, component, authRequired }, index) => (\r\n                <Route key={index} path={path} isPrivate={authRequired || false} >{component}</Route>\r\n            ))}\r\n        </Switch>\r\n    );\r\n}\r\n","import KoisLogo from \"./../images/scvlogo.png\";\r\nimport ScvLogo from \"./../images/koislogo.png\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <div style={{ padding: 20 }}>\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            marginBottom: 15\r\n          }}\r\n          src={KoisLogo}\r\n        />\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 15,\r\n            paddingBottom: 0\r\n          }}\r\n          src={ScvLogo}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from 'react';\r\n\r\n// ONLY USED IN app.js !!!!!\r\n// otherwise we use buttonlink.js\r\n\r\nexport default function({ title, link, icon }) {\r\n    return (\r\n        <span id={link} >\r\n            <Icon type={icon} />\r\n            <span>{title}</span>\r\n        </span>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/\">\r\n        <KoisLink\r\n          {...{ link: \"/\", title: \"Domov\", icon: \"home\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/admins\">\r\n        <KoisLink\r\n          {...{ link: \"/admins\", title: \"Administratorji\", icon: \"user\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Odjava\", icon: \"logout\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function () {\r\n    return (\r\n        <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n            <Menu.Item key=\"/\">\r\n                <KoisLink\r\n                    {...{ link: \"/\", title: \"Domov\", icon: \"home\" }}\r\n                />\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/login\">\r\n                <KoisLink {...{ link: \"/login\", title: \"Prijava\", icon: \"login\" }} />\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from \"antd\";\r\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport KoisHistory from './history';\r\n\r\nimport KoisRouter from \"./common/router\";\r\nimport KoisLogos from \"./common/logos\";\r\n\r\n//import navigation\r\nimport IsAuthNav from \"./navs/isauth\";\r\nimport NonAuthNav from \"./navs/nonauth\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default function() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isAuth, setAuth] = useState(localStorage.getItem(\"_kToken\") || undefined);\r\n\r\n  useEffect(() => {\r\n    document.querySelectorAll('.ant-menu-item').forEach(item => {\r\n        item.addEventListener('click', async event => {\r\n            if (item.firstChild.id == '/login') {\r\n                await localStorage.removeItem('_kToken');\r\n                await setAuth(undefined);\r\n            }\r\n            window.location = (item.firstChild.id);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router history={KoisHistory}>\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <BrowserRouter>\r\n        <Sider\r\n          style={{ background: \"#345\" }}\r\n          width={\"300\"}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={setCollapsed}\r\n        >\r\n          {!collapsed && <KoisLogos />}\r\n          {isAuth ? <IsAuthNav /> : <NonAuthNav/>}\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              background: \"#002140\",\r\n              padding: 10,\r\n              borderLeft: \"1px solid white\",\r\n              boxShadow: \"0 4px 2px -2px gray\"\r\n            }}\r\n          >\r\n            <Title style={{ color: \"#fff\" }}>\r\n              <Icon type=\"dashboard\" /> Kois Administracija\r\n            </Title>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n            <div\r\n              id=\"container\"\r\n              style={{ padding: 24, background: \"#fff\", minHeight: \"40vh\" }}\r\n            >\r\n              <KoisRouter />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Samo Pritrznik & Janez Sedeljsak 2019/20 ©\r\n          </Footer>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </Layout>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}