{"version":3,"sources":["images/kois-welcome.png","images/user.png","images/scvlogo.png","images/koislogo.png","history.js","common/routewrapper.js","containers/Home.js","common/apimethods.js","containers/Login.js","common/buttonlink.js","containers/Points.js","containers/Admins.js","common/modal.js","forms/fPoint.js","forms/fAdmin.js","detailed/dpoint.js","common/router.js","common/logos.js","common/menulink.js","navs/isauth.js","navs/nonauth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","RouteWrapper","Component","component","isPrivate","rest","signed","localStorage","getItem","to","defaultProps","src","WelcomeImage","style","width","maxHeight","margin","axios","interceptors","response","use","error","status","window","location","name","email","password","_AUTH","Promise","resolve","reject","a","async","post","headers","then","catch","get","id","data","JSON","stringify","delete","useEffect","React","useState","props","useHistory","dispalyForm","setDisplayForm","form","setForm","loginURL","href","forEach","_status","includes","Swal","fire","icon","title","substring","indexOf","removeItem","validateForm","test","length","className","for","type","value","minLength","onChange","event","target","shape","onClick","_api","login","push","reload","setItem","token","disabled","link","css","size","Meta","Card","points","setPoints","getPoints","maxWidth","display","flexFlow","position","map","index","tabs","_id","key","hoverable","flex","minWidth","cover","images","float","marginLeft","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deletePoint","admins","setAdmins","getUsers","getAdmins","itemLayout","dataSource","renderItem","item","Item","avatar","UserIcon","description","content","toggle","visibility","confirm","didMountRef","useRef","setMount","current","$","each","this","height","scrollHeight","visible","onOk","onCancel","cancelButtonProps","modal","setModalVisibility","modalIndex","setModalIndex","updateIndex","setUpdateIndex","lat","lng","setPosition","setTabs","pointForm","setPointForm","handleLocationChange","address","places","url","substr","lastIndexOf","getPoint","responseLocation","lon","toggleModal","validatePointForm","validFileds","Object","values","filter","containerElement","mapElement","defaultPosition","getModalContent","split","tabsUpdate","htmlType","fontSize","color","actions","tabForEdit","join","openEditTabModal","itemIndex","deleteTab","updatePoint","createPoint","register","Option","Select","point","setPoint","dropDownIndex","setDropDownIndex","userCreated","setUserCreated","userUpdated","setUserUpdated","setUser","idUser","whichUser","getUser","_doc","openedTab","drawMarker","createdData","moment","createdAt","format","updatedAt","convertToDMS","loc","deg","frac","Math","abs","min","sec","defaultValue","data-ride","background","image","i","backgroundSize","zIndex","top","left","click","remove","appendTo","alt","data-target","data-slide-to","role","data-slide","aria-hidden","marginTop","marginRight","north","east","open","clear","stlye","padding","dangerouslySetInnerHTML","__html","replace","flexDirection","alignItems","justifyContent","class","_R","path","Login","authRequired","Points","Admins","Home","marginBottom","KoisLogo","paddingBottom","ScvLogo","document","querySelectorAll","addEventListener","firstChild","theme","mode","navItem","Header","Layout","Content","Footer","Sider","Title","Typography","Boolean","hostname","match","ReactDOM","render","undefined","isAuth","KoisHistory","minHeight","collapsed","textAlign","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,qMCI5BC,EAFCC,c,SCED,SAASC,EAAT,GAIX,IAHWC,EAGZ,EAHCC,UACAC,EAED,EAFCA,UACGC,EACJ,yCACOC,EAASC,aAAaC,QAAQ,WACpC,OAAQJ,IAAcE,EAAU,kBAAC,IAAD,CAAUG,GAAG,sBAAyB,kBAAC,IAAD,iBAAWJ,EAAX,CAAiBF,UAAWD,KAQtGD,EAAaS,aAAe,CACxBN,WAAW,G,sBChBA,oBACX,yBACIO,IAAKC,IACLC,MAAO,CACHC,MAAO,oBACPC,UAAW,OACXC,QAAS,O,2DCHrBC,IAAMC,aAAaC,SAASC,KAAI,SAAAD,GAC5B,OAAOA,KACP,SAAAE,GAMD,OAL8B,MAA1BA,EAAMF,SAASG,OACfC,OAAOC,SAAW,oBACe,MAA1BH,EAAMF,SAASG,SACrBC,OAAOC,SAAW,qBAEhBH,K,oMAIkBI,E,EAAAA,KAAMC,E,EAAAA,MAAOC,E,EAAAA,SAAUC,E,EAAAA,M,kBACpC,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMiB,KAAN,UAjBmF,GAiBnF,kBAAqC,CAAET,OAAMC,QAAOC,YAAa,CACnEQ,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,uJAYFL,E,EAAAA,MAAOC,E,EAAAA,S,kBACjB,IAAIE,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMiB,KAAN,UA9BmF,GA8BnF,mBAAsC,CACxCR,MAAOA,EACPC,SAAUA,IAETS,KAAKN,GACLO,MAAMN,IANI,yC,sEAUDH,G,2FACX,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMqB,IAAN,UAzCmF,GAyCnF,kBAAoC,CACtCH,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,yJAaAQ,E,EAAAA,GAAIX,E,EAAAA,M,kBAChB,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMqB,IAAN,UAvDmF,GAuDnF,0BAAoCC,GAAM,CAC5CJ,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,6JAaIS,E,EAAAA,KAAMZ,E,EAAAA,M,kBACtB,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMiB,KAAN,UArEmF,GAqEnF,qBAAwCO,KAAKC,UAAU,CAACF,KAAMA,IAAQ,CACxEL,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,OAAM,kBAAMP,EAAQ,CAAET,OAAO,QARnB,yC,uEAaAO,G,2FACZ,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMqB,IAAN,UAnFmF,GAmFnF,qBAAuC,CACzCH,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,0JAcCQ,E,EAAAA,GAAIX,E,EAAAA,M,kBACjB,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMqB,IAAN,UAlGmF,GAkGnF,6BAAuCC,GAAM,CAC/CJ,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,+JAaIQ,E,EAAAA,GAAIC,E,EAAAA,KAAMZ,E,EAAAA,M,kBAC1B,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAMiB,KAAN,UAhHmF,GAgHnF,6BAAwCK,GAAME,KAAKC,UAAU,CAACF,KAAMA,IAAQ,CAC9EL,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,OAAM,kBAAMP,EAAQ,CAAET,OAAO,QARnB,yC,6JAaIkB,E,EAAAA,GAAIX,E,EAAAA,M,kBACpB,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTf,IAAM0B,OAAN,UA9HmF,GA8HnF,6BAA0CJ,GAAM,CAClDJ,QAAS,CACL,cAAgB,SAAhB,OAA0BP,GAC1B,eAAgB,sBAGnBQ,KAAKN,GACLO,MAAMN,IARI,yC,+DC1HnBa,EAAwBC,IAAxBD,UAAWE,EAAaD,IAAbC,SAEJ,WAACC,GACZ,IAAMhD,EAAUiD,cADM,EAEkBF,GAAS,GAF3B,mBAEdG,EAFc,KAEDC,EAFC,OAIEJ,EAAS,CAC7BpB,MAAO,GACPC,SAAU,KANQ,mBAIfwB,EAJe,KAITC,EAJS,KAStBR,GAAU,WACN,IAAMS,EAAW9B,OAAOC,SAAS8B,KAC7BhC,EAAS,KAOb,GANA,CAAC,MAAO,MAAO,MAAO,OAAOiC,SAAQ,SAAAC,GAC7BH,EAASI,SAASD,KAClBlC,EAASkC,MAIblC,EAAQ,CAORoC,IAAKC,KAAK,CACNC,KAAiB,KAAVtC,EAAiB,UAAY,QACpCuC,MARQ,CACR,IAAO,+CACP,IAAO,gCACP,IAAO,+BACP,IAAO,0CAIIvC,KACZc,MAAK,WACJb,OAAOC,SAAS8B,KAAOD,EAASS,UAAU,EAAGT,EAASU,QAAQ,cAGlEb,GAAe,GAEnB3C,aAAayD,WAAW,aACzB,IAEH,IAAMC,EAAe,WAAO,IAChBvC,EAAqByB,EAArBzB,MAAQC,EAAawB,EAAbxB,SAChB,MAAQ,gDAAgDuC,KAAKxC,IAAWC,EAASwC,OAAS,GAkB9F,OAAIlB,EAEI,8BACI,yBAAKmB,UAAU,cACX,2BAAOC,IAAI,QAAQD,UAAU,sBAA7B,gBACA,2BACI7B,GAAG,QACH+B,KAAK,QACLF,UAAU,eACVG,MAAOpB,EAAKzB,MACZ8C,UAAU,IACVC,SAAU,SAAAC,GACNtB,EAAQ,CAAE1B,MAAOgD,EAAMC,OAAOJ,MAAO5C,SAAUwB,EAAKxB,eAIhE,yBAAKyC,UAAU,cACX,2BAAOC,IAAI,WAAWD,UAAU,sBAAhC,SACA,2BACI7B,GAAG,WACH+B,KAAK,WACLE,UAAU,IACVJ,UAAU,eACVG,MAAOpB,EAAKxB,SACZ8C,SAAU,SAAAC,GACNtB,EAAQ,CAAE1B,MAAOyB,EAAKzB,MAAOC,SAAU+C,EAAMC,OAAOJ,YAIhE,kBAAC,IAAD,CACID,KAAK,UACLV,KAAK,QACLgB,MAAM,QACNR,UAAU,oBACVS,QAjDI,0BAAA7C,EAAAC,OAAA,mDACXgC,IADW,mEAAAjC,EAAA,MAEI8C,EAAKC,MAAM5B,IAFf,OAGI,MADd4B,EAFU,QAGNzD,SACNoC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,kCACRzB,MAAK,WACJrC,EAAQiF,KAAK,KACbzD,OAAOC,SAASyD,YAEpB1E,aAAa2E,QAAQ,UAAWH,EAAMvC,KAAK2C,QAX/B,sCAkDJC,UAAWnB,KANf,YAYD,sC,0BCtGA,cAA6C,IAAlCJ,EAAiC,EAAjCA,MAAOwB,EAA0B,EAA1BA,KAAMzB,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,IAAKV,EAAS,EAATA,MAChD,OACE,oCACE,kBAAC,IAAD,CAAMnE,GAAI4E,GACR,kBAAC,IAAD,CAAQf,KAAMgB,GAAO,UAAW1B,KAAMA,EAAMgB,MAAOA,GAAS,QAASW,KAAM,SACtE1B,MCFL2B,EAASC,IAATD,KAEO,aACX,IAAMzF,EAAUiD,cADO,EAEKF,mBAAS,IAFd,mBAEhB4C,EAFgB,KAERC,EAFQ,KAQvB,SAAeC,IAAf,iBAAA5D,EAAAC,OAAA,uDACUkD,EAAQ5E,aAAaC,QAAQ,WADvC,WAAAwB,EAAA,MAE2B8C,EAAKc,UAAUT,IAF1C,OAG2B,MADjBhE,EAFV,QAGiBG,QACTqE,EAAUxE,EAASqB,MAJ3B,qCAiCA,OArCAI,qBAAU,WACNgD,MACD,IAmCCF,EAAOvB,OAEH,yBAAKtD,MAAO,CAAEgF,SAAU,SACpB,kBAAC,EACO,CAAEhC,MAAO,mBAAewB,KAAM,aAAczB,KAAM,SAE1D,6BACA,yBACI/C,MAAO,CACHiF,QAAS,OACTC,SAAU,WACVC,SAAU,aAGbN,EAAOO,KAAI,WAAgBC,GAAhB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACR,kBAAC,IAAD,CACIC,IAAKH,EACLI,WAAS,EACTzF,MAAO,CACH0F,KAAM,uBACNC,SAAU,QACVX,SAAU,OACV7E,OAAQ,OAEZyF,MACI,yBAAK9F,IAAKwF,EAAK,GAAGO,OAAO,MAG7B,kBAAClB,EAAD,CAAM3B,MAAOsC,EAAK,GAAGtC,QACrB,6BACA,kBAAC,IAAD,CAASA,MAAM,kBACX,kBAAC,IAAD,CACIhD,MAAO,CAAE8F,MAAO,QAASC,WAAY,QACrCtC,KAAK,YACLM,MAAM,SACNhB,KAAK,aACL2B,KAAM,QACNV,QAAS,kBAAM9E,EAAQiF,KAAR,0BAAgCoB,QAGvD,kBAAC,IAAD,CAASvC,MAAM,SACX,kBAAC,IAAD,CACIhD,MAAO,CAAE8F,MAAO,QAASC,WAAY,QACrCtC,KAAK,UACLM,MAAM,SACNhB,KAAK,OACL2B,KAAM,QACNV,QAAS,kBAAM9E,EAAQiF,KAAR,sBAA4BoB,QAGnD,kBAAC,IAAD,CAASvC,MAAM,uBACX,kBAAC,IAAD,CACIhD,MAAO,CAAE8F,MAAO,SAChBrC,KAAK,SACLM,MAAM,SACNhB,KAAK,SACL2B,KAAM,QACNV,QAAS,kBAlFzC,SAA2BtC,GAA3B,eAAAP,EAAAC,OAAA,gDACUL,EAAQrB,aAAaC,QAAQ,WACnCkD,IAAKC,KAAK,CACNE,MAAO,2BACPgD,KAAM,yDACNjD,KAAM,UACNkD,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpB7E,MAAK,SAAO8E,GAAP,SAAAlF,EAAAC,OAAA,oDACAiF,EAAO3C,MADP,kCAAAvC,EAAA,MAEuB8C,EAAKqC,YAAY,CAAE5E,KAAIX,WAF9C,OAGuB,KAHvB,OAGaN,SACToC,IAAKC,KACD,4BACA,kCACA,WAEJiC,KATJ,wCAVZ,qCAkF+CuB,CAAYf,aAShD,6BAAK,kBAAC,IAAD,CAAMb,KAAK,Y,oCC7GhB,aAAa,IAAD,EACKzC,mBAAS,IADd,mBAChBsE,EADgB,KACRC,EADQ,KAgBvB,OAbAzE,qBAAU,YAIV,qBAAAZ,EAAAC,OAAA,uDACUkD,EAAQ5E,aAAaC,QAAQ,WADvC,WAAAwB,EAAA,MAE2B8C,EAAKwC,SAASnC,IAFzC,OAG2B,MADjBhE,EAFV,QAGiBG,QACT+F,EAAUlG,EAASqB,MAJ3B,qCAHI+E,KACD,IAWCH,EAAOjD,OAEH,6BACI,kBAAC,EAAa,CAAEN,MAAO,wBAAyBwB,KAAM,aAAczB,KAAM,SAC1E,6BACA,kBAAC,IAAD,CACI4D,WAAW,aACXC,WAAYL,EACZM,WAAY,SAAAC,GAAI,OACZ,kBAAC,IAAKC,KAAN,KACI,kBAAC,IAAKA,KAAKpC,KAAX,CACIqC,OACI,kBAAC,IAAD,CAAQlH,IAAKmH,MAEjBjE,MAAO8D,EAAKlG,KACZsG,YAAaJ,EAAKjG,aAQnC,6BAAK,kBAAC,IAAD,CAAM6D,KAAK,Y,sEC1ChB,cAA4D,IAAhDyC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAYrE,EAAkB,EAAlBA,MAAOsE,EAAW,EAAXA,QAErDC,EAAcC,kBAAO,GAF2C,EAG5CvF,oBAAS,GAHmC,mBAGxDwF,GAHwD,WAgBtE,OAXA1F,qBAAU,WACO,qBAATiB,IACAyE,GAAS,GACLF,EAAYG,QACZC,IAAE,YAAYC,MAAK,WACfD,IAAEE,MAAMC,OAAO,GAAGA,OAAOD,KAAKE,iBAE/BR,EAAYG,SAAU,MAKjC,kBAAC,IAAD,CACI1E,MAAOA,EACPgF,QAASX,EACTY,KAAMX,GAAoBF,EAC1Bc,SAAUd,EACVe,kBAAmB,CAAEnI,MAAO,CAAEiF,QAAS,SACvChF,MAAO,QACTkH,ICrBK,eAAqB,IAAT1D,EAAQ,EAARA,KAAQ,EACKxB,oBAAS,GADd,mBACxBmG,EADwB,KACjBC,EADiB,OAEKpG,mBAAS,MAFd,mBAExBqG,EAFwB,KAEZC,EAFY,OAGOtG,mBAAS,MAHhB,mBAGxBuG,EAHwB,KAGXC,EAHW,OAICxG,mBAAS,CAAEyG,IAAK,QAASC,IAAK,SAJ/B,mBAIxBxD,EAJwB,KAIdyD,EAJc,OAKP3G,mBAAS,IALF,mBAKxBqD,EALwB,KAKlBuD,EALkB,OAMG5G,mBAAS,CACvCe,MAAO,GACP6C,OAAQ,GACRqB,YAAa,KATc,mBAMxB4B,EANwB,KAMbC,EANa,KAczBC,EAAuB,SAAC,GAAmC,IAAjC7D,EAAgC,EAAhCA,SAAgC,EAAtB8D,QAAsB,EAAbC,OAC/CN,EAAYzD,IAehBpD,qBAAU,WACM,QAAR0B,GAbS,2BAAAtC,EAAAC,OAAA,uDACPL,EAAQrB,aAAaC,QAAQ,WAC7BwJ,EAAMzI,OAAOC,SAAS8B,KACtBf,EAAKyH,EAAIC,OAAOD,EAAIE,YAAY,KAAO,GAHhC,WAAAlI,EAAA,MAIU8C,EAAKqF,SAAS,CAAE5H,KAAIX,WAJ9B,OAKU,MADjBT,EAJO,QAKAG,SACH8I,EAAmBjJ,EAASqB,KAAKhB,SACvCkI,EAAQvI,EAASqB,KAAK2D,MACtBsD,EAAY,CAAEF,IAAKa,EAAiBb,IAAKC,IAAKY,EAAiBC,OARtD,qCAaOF,KACrB,IAEH,IAAMG,EAAc,WACZ,CAAC,YAAa,mBAAmB7G,SAAS0F,IAAwB,GAATF,GACzDW,EAAa,CACT/F,MAAO,GACP6C,OAAQ,GACRqB,YAAa,KAGrBmB,GAAoBD,IAuClBsB,EAAoB,WACtB,IAAMC,EAAcC,OAAOC,OAAOf,GAAWgB,QAAO,SAAAhD,GAAI,OAAIA,EAAKxD,UAAQA,OACzE,OAAOsG,OAAOC,OAAOf,GAAWxF,QAAUqG,GAkI9C,MAAY,QAARlG,GAAmB6B,EAAKhC,OAGhB8E,EAiFJ,kBAAC,EAAc,CACXpF,MArHU,CAClB,UAAa,gBACb,gBAAmB,mBACnB,eAAkB,qBAkHWsF,GACrBnB,QArIY,WACpB,OAAQmB,GAEJ,IAAK,iBACD,OA7CA,kBAAC,IAAD,CACJyB,iBAAkB,yBAAK/J,MAAO,CAAE8H,OAAQ,UACxCkC,WAAY,yBAAKhK,MAAO,CAAE8H,OAAQ,WAClCmC,gBAAiB9E,EACjBvB,SAAUoF,IA2CV,IAAK,YACL,IAAK,kBACD,OAtFJ,8BACI,yBAAKzF,UAAU,cACX,2BAAOC,IAAI,qBAAqBD,UAAU,sBAA1C,UACA,2BACIE,KAAK,OACLF,UAAU,eACVG,MAAOoF,EAAU9F,MACjBY,SAAU,SAAAC,GACNkF,EAAa,eAAKD,EAAN,CAAiB9F,MAAOa,EAAMC,OAAOJ,aAI7D,yBAAKH,UAAU,cACX,2BAAOC,IAAI,qBAAqBD,UAAU,sBAA1C,iBACA,8BACIA,UAAU,eACVG,MAAOoF,EAAUjD,OACjBjC,SAAU,SAAAC,GACNkF,EAAa,eAAKD,EAAN,CAAiBjD,OAAQhC,EAAMC,OAAOJ,aAI9D,yBAAKH,UAAU,cACX,2BAAOC,IAAI,qBAAqBD,UAAU,sBAA1C,QACA,8BACIA,UAAU,eACVG,MAAOoF,EAAU5B,YACjBtD,SAAU,SAAAC,GACNkF,EAAa,eAAKD,EAAN,CAAiB5B,YAAarD,EAAMC,OAAOJ,cA4DvE,QACI,MAAO,oCA0HEwG,GACT7C,WAAYe,EACZhB,OAAQqC,EACRnC,QAjQK,WACb,GAAI,CAAC,YAAa,mBAAmB1E,SAAS0F,GAAa,CAAC,IAClDtF,EAA+B8F,EAA/B9F,MAAO6C,EAAwBiD,EAAxBjD,OAAQqB,EAAgB4B,EAAhB5B,YAErB,GADArB,EAASA,EAAOsE,MAAM,MACnBT,IAAqB,CACpB,GAAkB,aAAdpB,EACAO,EAAQ,GAAD,mBAAKvD,GAAL,CAAW,CAAEtC,QAAOkE,cAAarB,aACxCkD,EAAa,CACT/F,MAAO,GACP6C,OAAQ,GACRqB,YAAa,SAEd,CACH,IAAMkD,EAAa9E,EACnB8E,EAAW5B,GAAe,CAAExF,QAAOkE,cAAarB,UAChDgD,EAAQ,YAAIuB,IACZrB,EAAa,CACT/F,MAAO,GACP6C,OAAQ,GACRqB,YAAa,KAIrBmB,GAAmB,QAInBxF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,2CAIZqF,GAAmB,MA2ItB,kBAAC,IAAD,CAAMrI,MAAO,CAAE2F,SAAU,QACrB,kBAAC,IAAKoB,KAAN,KACI,kBAAC,IAAD,CACIhE,KAAK,aACLgB,MAAM,QACNC,QAAS,WAAQyF,IAAmBlB,EAAc,eAHtD,iBAOA,kBAAC,IAAD,CACIvE,QAAS,WAAQyF,IAAmBlB,EAAc,mBAClDvI,MAAO,CAAE+F,WAAY,IACrBhD,KAAK,SACLgB,MAAM,QACNsG,SAAS,SACT9G,UAAU,qBANd,mBAUA,0BAAMvD,MAAO,CAAEsK,SAAU,GAAIvE,WAAY,KACrC,kBAAC,IAAD,CAAMtC,KAAK,cAAczD,MAAO,CAAEuK,MAAO,UAAa,IAD1D,4BACmF,IAC/E,2BAAIpF,EAASwD,KAAS,IAF1B,2BAEkD,IAC9C,2BAAIxD,EAASuD,MAEjB,8BAEJ,kBAAC,IAAK3B,KAAN,KACI,kBAAC,IAAD,CACIJ,WAAW,aACXC,WAAYtB,EACZuB,WAAY,SAACC,EAAMzB,GAAP,OACR,kBAAC,IAAK0B,KAAN,CACIyD,QAAS,CACL,kBAAC,IAAD,CAASxH,MAAM,iBACX,kBAAC,IAAD,CACIS,KAAK,UACLM,MAAM,SACNhB,KAAK,OACL2B,KAAM,QACNV,QAAS,kBApExB,SAAAqB,GACrBoD,EAAepD,GACfoE,IACAlB,EAAc,mBACd,IAAMkC,EAAanF,EAAKD,GACxB0D,EAAa,eAAK0B,EAAN,CAAkB5E,OAAQ4E,EAAW5E,OAAO6E,KAAK,SA+DVC,CAAiBtF,OAGxC,kBAAC,IAAD,CAASrC,MAAM,oBACX,kBAAC,IAAD,CACIS,KAAK,SACLM,MAAM,SACNhB,KAAK,SACL2B,KAAM,QACNV,QAAS,kBApE/B,SAAAqB,GACdxC,IAAKC,KAAK,CACNE,MAAO,2BACPgD,KAAM,oDACNjD,KAAM,UACNkD,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QAClB7E,MAAK,SAAO8E,GAAP,SAAAlF,EAAAC,OAAA,gDACFiF,EAAO3C,OACPmF,EAAQ,YAAIvD,EAAKwE,QAAO,SAAChD,EAAM8D,GAAP,OAAqBA,GAAavF,OAFxD,wCA2DyCwF,CAAUxF,SAKrC,kBAAC,IAAK0B,KAAKpC,KAAX,CACIqC,OACI,kBAAC,IAAD,CAAQlH,IAAKgH,EAAKjB,OAAO,KAE7B7C,MAAO8D,EAAK9D,MACZkE,aAAcJ,EAAKI,YAAY5D,OAAS,IAAMwD,EAAKI,YAAYkC,OAAO,EAAE,KAAOtC,EAAKI,aAAe,YAKnH,8BAEJ,kBAAC,IAAKH,KAAN,KACI,kBAAC,IAAD,CACI/C,QAAiB,QAARP,EAvJH,gCAAAtC,EAAAC,OAAA,uDAChBL,EAAQrB,aAAaC,QAAQ,WAC7BwJ,EAAMzI,OAAOC,SAAS8B,KACtBf,EAAKyH,EAAIC,OAAOD,EAAIE,YAAY,KAAO,GACvC1H,EAAO,CACThB,SAAS,eAAMwE,EAAP,CAAiBqE,IAAKrE,EAASwD,MACvCrD,KAAMA,GANY,WAAAnE,EAAA,MAQC8C,EAAK6G,YAAY,CAAEpJ,KAAIC,OAAMZ,WAR9B,OASC,KATD,OASTN,QACToC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,kDAZO,sCAiBD,4BAAA7B,EAAAC,OAAA,uDACfL,EAAQrB,aAAaC,QAAQ,WAC7BgC,EAAO,CACThB,SAAS,eAAMwE,EAAP,CAAiBqE,IAAKrE,EAASwD,MACvCrD,KAAMA,GAJW,WAAAnE,EAAA,MAME8C,EAAK8G,YAAY,CAAEpJ,OAAMZ,WAN3B,OAOE,KAPF,OAORN,SACToC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,4CAEX6F,EAAQ,KAZS,sCAuILpF,KAAK,UACLV,KAAK,cACLgB,MAAM,QACNsG,SAAS,SACT9G,UAAU,oBACVgB,UAAWe,EAAKhC,QAEP,QAARG,EAAiB,sBAAmB,sBA9E9C,6BAAK,kBAAC,IAAD,CAAMiB,KAAK,YCxNvBzC,GAAaD,IAAbC,SAEO,cAAO,IAAD,EACOA,GAAS,CAC7BrB,KAAM,GACNC,MAAO,GACPC,SAAU,KAJG,mBACVwB,EADU,KACJC,EADI,KAOXa,EAAe,WAAO,IAChBxC,EAA0B0B,EAA1B1B,KAAMC,EAAoByB,EAApBzB,MAAOC,EAAawB,EAAbxB,SACrB,MAAQ,gDAAgDuC,KAAKxC,IACtDC,EAASwC,OAAS,GAClB1C,EAAK0C,OAAS,GAezB,OACI,8BACI,yBAAKC,UAAU,cACX,2BAAOC,IAAI,OAAOD,UAAU,sBAA5B,iBACA,2BACI7B,GAAG,OACH+B,KAAK,OACLF,UAAU,eACVG,MAAOpB,EAAK1B,KACZ+C,UAAU,IACVC,SAAU,SAAAC,GACNtB,EAAQ,eAAKD,EAAN,CAAY1B,KAAMiD,EAAMC,OAAOJ,aAIlD,yBAAKH,UAAU,cACX,2BAAOC,IAAI,QAAQD,UAAU,sBAA7B,gBACA,2BACI7B,GAAG,QACH+B,KAAK,QACLF,UAAU,eACVG,MAAOpB,EAAKzB,MACZ8C,UAAU,IACVC,SAAU,SAAAC,GACNtB,EAAQ,eAAKD,EAAN,CAAYzB,MAAOgD,EAAMC,OAAOJ,aAInD,yBAAKH,UAAU,cACX,2BAAOC,IAAI,WAAWD,UAAU,sBAAhC,SACA,2BACI7B,GAAG,WACH+B,KAAK,WACLE,UAAU,IACVJ,UAAU,eACVG,MAAOpB,EAAKxB,SACZ8C,SAAU,SAAAC,GACNtB,EAAQ,eAAKD,EAAN,CAAYxB,SAAU+C,EAAMC,OAAOJ,aAItD,kBAAC,IAAD,CACID,KAAK,UACLV,KAAK,QACLgB,MAAM,QACNR,UAAU,oBACVS,QA1DW,0BAAA7C,EAAAC,OAAA,mDACdgC,IADc,wDAEbrC,EAAQrB,aAAaC,QAAQ,WAFhB,WAAAwB,EAAA,MAGI8C,EAAK+G,SAAL,eAAkB1I,EAAlB,CAAwBvB,YAH5B,OAII,KAJJ,OAINN,QACToC,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,yCAPI,sCA2DXuB,UAAWnB,KANf,kB,uECjEJ6H,GAAWC,KAAXD,OAEO,cAAa,IAAD,EACGhJ,mBAAS,MADZ,mBAChBkJ,EADgB,KACTC,EADS,OAEmBnJ,mBAAS,GAF5B,mBAEhBoJ,EAFgB,KAEDC,EAFC,OAGerJ,mBAAS,MAHxB,mBAGhBsJ,EAHgB,KAGHC,EAHG,OAIevJ,mBAAS,MAJxB,mBAIhBwJ,EAJgB,KAIHC,EAJG,KAkBvB,SAAeC,EAAQC,EAAQC,GAA/B,iBAAA1K,EAAAC,OAAA,uDACUL,EAAQrB,aAAaC,QAAQ,WADvC,WAAAwB,EAAA,MAE2B8C,EAAK6H,QAAQ,CAAEpK,GAAIkK,EAAQ7K,WAFtD,OAG2B,MADjBT,EAFV,QAGiBG,SACQ,WAAboL,EAAwBL,EAAelL,EAASqB,KAAKoK,KAAKnL,MACzD8K,EAAepL,EAASqB,KAAKoK,KAAKnL,OAL/C,qCAaA,GAJAmB,qBAAU,YArBV,yBAAAZ,EAAAC,OAAA,uDACUL,EAAQrB,aAAaC,QAAQ,WAC7BwJ,EAAMzI,OAAOC,SAAS8B,KACtBf,EAAKyH,EAAIC,OAAOD,EAAIE,YAAY,KAAO,GAHjD,WAAAlI,EAAA,MAI2B8C,EAAKqF,SAAS,CAAE5H,KAAIX,WAJ/C,OAK2B,MADjBT,EAJV,QAKiBG,SACTkL,EAAQrL,EAASqB,KAAK8J,YAAa,WACnCE,EAAQrL,EAASqB,KAAK4J,YAAa,WACnCH,EAAS9K,EAASqB,OAR1B,qCAsBI2H,KACD,IAEC6B,EAAO,CAAC,IACA7F,EAAS6F,EAAT7F,KACF0G,EAAY1G,EAAK+F,GAFhB,EAGcF,EAAMxK,SAAnB+H,EAHD,EAGCA,IAAKc,EAHN,EAGMA,IACPyC,EAAa7G,KAAIoE,EAAKd,GACtBwD,EAAc,CAAC,CACb1G,IAAK,iCACL9B,MAAOyI,KAAOhB,EAAMiB,WAAWC,OAAO,iBACvC,CACC7G,IAAK,6BACL9B,MAAO6H,GACR,CACC/F,IAAK,mCACL9B,MAAOyI,KAAOhB,EAAMmB,WAAWD,OAAO,iBACxC,CACE7G,IAAK,6BACL9B,MAAO+H,IAgBTc,EAAe,SAAAC,GACjB,IAAMC,EAAY,EAAND,EACRE,EAAOC,KAAKC,IAAIJ,EAAMC,GACtBI,EAAc,GAAPH,EAAa,EACpBI,EAAa,KAAPJ,EAAoB,GAANG,EAExB,MAAM,GAAN,OAAUJ,GAAY,EAAtB,eAA2BI,GAAY,EAAvC,YAA4CC,GAAY,EAAxD,MASJ,OACI,6BACMxH,EAAKhC,OAAS,GACZ,oCACI,6BACI,kBAAC,KAAD,CAAQyJ,aAAczH,EAAK,GAAGtC,MAAOhD,MAAO,CAAEC,MAAO,QAAU2D,SAAU0H,GACpEhG,EAAKF,KAAI,WAAYC,GAAZ,IAAGrC,EAAH,EAAGA,MAAH,OACN,kBAACiI,GAAD,CAAQvH,MAAO2B,GAAQrC,QAKnC,8BAIR,yBAAKtB,GAAG,YAAY6B,UAAU,iBAAiByJ,YAAU,YACrD,yBAAKzJ,UAAU,iBAAiBvD,MAAO,CAAE8H,OAAQ,OAAQmF,WAAY,YAChEjB,EAAUnG,OAAOT,KAAI,SAAC8H,EAAOC,GAAR,OAClB,yBAAKnN,MAAO,CAAE8H,OAAQ,QAAUvE,UAAS,wBAAwB,GAAL4J,EAAS,SAAW,KAC5E,yBACI5J,UAAU,UACVS,QAAS,kBAlDnBlE,EAkDmCoN,OAjD7CvF,IAAE,SACGlD,IAAI,CACDwI,WAAW,kBAAD,OAAoBnN,EAApB,uBACVsN,eAAgB,UAChBnN,MAAM,OAAQ6H,OAAO,OACrB3C,SAAS,QAASkI,OAAO,QACzBC,IAAI,IAAKC,KAAK,MAEjBC,OAAM,WAAY7F,IAAEE,MAAM4F,YAC1BC,SAAS,QAVJ,IAAA5N,GAmDUA,IAAKoN,EACLS,IAAI,oBAMlB3B,EAAUnG,OAAOvC,OAAS,GACxB,oCACI,wBAAIC,UAAU,uBACTyI,EAAUnG,OAAOT,KAAI,SAAC8H,EAAOC,GAAR,OAClB,wBAAIS,cAAY,aAAaC,gBAAeV,EAAG5J,UAAgB,GAAL4J,EAAS,SAAW,SAItF,uBAAG5J,UAAU,wBAAwBd,KAAK,aAAaqL,KAAK,SAASC,aAAW,QAC5E,0BAAMxK,UAAU,6BAA6ByK,cAAY,SACzD,0BAAMzK,UAAU,WAAhB,aAEJ,uBAAGA,UAAU,wBAAwBd,KAAK,aAAaqL,KAAK,SAASC,aAAW,QAC5E,0BAAMxK,UAAU,6BAA6ByK,cAAY,SACzD,0BAAMzK,UAAU,WAAhB,WAOhB,yBAAKvD,MAAO,CAAEiO,UAAW,KACrB,wBAAIjO,MAAO,CAAE8F,MAAO,SAAWkG,EAAUhJ,OACzC,kBAAC,IAAD,CAAShD,MAAO,CAAE8F,MAAO,SAAW9C,MAAM,uBACtC,kBAAC,IAAD,CACIhD,MAAO,CAAEkO,YAAa,GAAIpI,MAAO,SACjCrC,KAAK,UACLM,MAAM,SACNhB,KAAK,cACL2B,KAAM,QACNV,QAlEH,WACb,IAAMmK,EAAQ5B,EAAa7D,GACrB0F,EAAO7B,EAAa/C,GAC1B9I,OAAO2N,KAAP,4CAAiDF,EAAjD,YAA0DC,EAA1D,aAoEI,wBAAIpO,MAAO,CAAEsO,MAAO,UACpB,0BACIC,MAAO,CAAEC,QAAS,IAClBC,wBAAyB,CAAEC,OAAQ1C,EAAU9E,YAAYyH,QAAQ,MAAO,aAE5E,6BACA,yBAAK3O,MAAO,CAAEiF,QAAS,OAAQ2J,cAAe,QAC1C,yBAAK5O,MAAO,CAAEG,OAAQ,GAAIF,MAAO,OAAQgF,QAAS,OAAQ4J,WAAY,SAAUC,eAAgB,WAC5F,wBAAIC,MAAM,cACL7C,EAAY9G,KAAI,gBAAGI,EAAH,EAAGA,IAAK9B,EAAR,EAAQA,MAAR,OACb,uBAAGqL,MAAM,mBACL,yBAAKA,MAAM,sBACP,uBAAGA,MAAM,2BAA2BvJ,GACpC,uBAAGuJ,MAAM,wBAAuB,2BAAIrL,WAMxD,yBACI1D,MAAO,CAAEG,OAAQ,GAAIF,MAAO,OAAQgF,QAAS,OAAQ4J,WAAY,SAAUC,eAAgB,UAC3FL,wBAAyB,CAAEC,OAAQ7M,KAAUoK,QAM7D,OAAO,6BAAK,kBAAC,IAAD,CAAMvH,KAAK,YCpKhB,cACX,IAAMsK,EAAK,CAEP,CAAEC,KAAM,SAAU3P,UAAW,kBAAC4P,EAAD,MAAWC,cAAc,GAGtD,CAAEF,KAAM,UAAW3P,UAAW,kBAAC8P,EAAD,MAAYD,cAAc,GACxD,CAAEF,KAAM,UAAW3P,UAAW,kBAAC+P,EAAD,MAAYF,cAAc,GAGxD,CAAEF,KAAM,aAAc3P,UAAW,kBAAC,GAAW,CAAEmE,KAAM,QAAa0L,cAAc,GAChF,CAAEF,KAAM,aAAc3P,UAAW,kBAAC,GAAW,CAAEmE,KAAM,QAAa0L,cAAc,GAChF,CAAEF,KAAM,kBAAmB3P,UAAW,kBAAC,GAAW,CAAEmE,KAAM,SAAc0L,cAAc,GAGtF,CAAEF,KAAM,sBAAuB3P,UAAW,kBAAC,GAAD,MAAY6P,cAAc,GAGpE,CAAEF,KAAM,GAAI3P,UAAW,kBAACgQ,EAAD,MAAUH,cAAc,IAGnD,OACI,kBAAC,IAAD,KACKH,EAAG5J,KAAI,WAAoCC,GAApC,IAAG4J,EAAH,EAAGA,KAAM3P,EAAT,EAASA,UAAW6P,EAApB,EAAoBA,aAApB,OACJ,kBAAC,EAAD,CAAO3J,IAAKH,EAAO4J,KAAMA,EAAM1P,UAAW4P,IAAgB,GAAS7P,Q,0CCrCpE,cACb,OACE,oCACE,yBAAKU,MAAO,CAAEwO,QAAS,KACrB,yBACExO,MAAO,CACLC,MAAO,OACPsP,aAAc,IAEhBzP,IAAK0P,OAEP,yBACExP,MAAO,CACLC,MAAO,OACPuO,QAAS,GACTiB,cAAe,GAEjB3P,IAAK4P,QAGT,+B,UCjBS,eAAiC,IAAtB1M,EAAqB,EAArBA,MAAOwB,EAAc,EAAdA,KAAMzB,EAAQ,EAARA,KACnC,OACI,0BAAMrB,GAAI8C,GACN,kBAAC,IAAD,CAAMf,KAAMV,IACZ,8BAAOC,KCNJ,cAEX,IAAM9D,EAAUiD,cAEhBJ,qBAAU,kBACN4N,SAASC,iBAAiB,kBAAkBlN,SAAQ,SAAAoE,GAAI,OACpDA,EAAK+I,iBAAiB,SAAS,SAAMhM,GAAN,SAAA1C,EAAAC,OAAA,mDACD,UAAtB0F,EAAKgJ,WAAWpO,GADO,kCAAAP,EAAA,MACezB,aAAayD,WAAW,YADvC,OAE3BjE,EAAQiF,KAAK2C,EAAKgJ,WAAWpO,IAFF,6CAIhC,IASP,OACI,kBAAC,KAAD,CAAMqO,MAAM,OAAO/P,MAAO,CAAEiN,WAAY,WAAa+C,KAAK,UARtC,CACpB,CAAExL,KAAM,IAAKxB,MAAO,QAASD,KAAM,QACnC,CAAEyB,KAAM,UAAWxB,MAAO,aAASD,KAAM,eACzC,CAAEyB,KAAM,UAAWxB,MAAO,kBAAmBD,KAAM,QACnD,CAAEyB,KAAM,oBAAqBxB,MAAO,SAAUD,KAAM,WAK/BqC,KAAI,SAAC6K,EAAS5K,GAAV,OACjB,kBAAC,KAAK0B,KAAN,CAAWvB,IAAKH,GACZ,kBAAC,GAAa4K,SCvBnB,cACX,IAAM/Q,EAAUiD,cAEhBJ,qBAAU,kBACN4N,SAASC,iBAAiB,kBAAkBlN,SAAQ,SAAAoE,GAAI,OACpDA,EAAK+I,iBAAiB,SAAS,oBAAA1O,EAAAC,OAAA,yEAAYlC,EAAQiF,KAAK2C,EAAKgJ,WAAWpO,KAAzC,6CACpC,IAOH,OACI,kBAAC,KAAD,CAAMqO,MAAM,OAAO/P,MAAO,CAAEiN,WAAY,WAAa+C,KAAK,UANtC,CACpB,CAAExL,KAAM,IAAKxB,MAAO,QAASD,KAAM,QACnC,CAAEyB,KAAM,SAAUxB,MAAO,UAAWD,KAAM,UAKrBqC,KAAI,SAAC6K,EAAS5K,GAAV,OACjB,kBAAC,KAAK0B,KAAN,CAAWvB,IAAKH,GACZ,kBAAC,GAAa4K,SCN1BC,GAAmCC,IAAnCD,OAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,OAAQC,GAAUH,IAAVG,MACzBC,GAAUC,IAAVD,MCLYE,QACW,cAA7B/P,OAAOC,SAAS+P,UAEe,UAA7BhQ,OAAOC,SAAS+P,UAEhBhQ,OAAOC,SAAS+P,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBFaD,WAAa,IAAD,EACG5O,mBAASvC,aAAaC,QAAQ,iBAAcmR,GAD/C,mBAChBC,EADgB,UAGvB,OACI,kBAAC,IAAD,CAAQ7R,QAAS8R,GACb,kBAAC,IAAD,CAAQhR,MAAO,CAAEiR,UAAW,UACxB,kBAAC,IAAD,KACI,kBAACX,GAAD,CAAOrQ,MAAO,MAAOiR,WAAW,GAC5B,kBAAC,GAAD,MACCH,EAAS,kBAAC,GAAD,MAAgB,kBAAC,GAAD,OAE9B,kBAAC,IAAD,KACI,kBAACb,GAAD,CAAQlQ,MAAO,CAAEiN,WAAY,UAAWuB,QAAS,KAC7C,kBAAC+B,GAAD,CAAOvQ,MAAO,CAAEuK,MAAO,SACnB,kBAAC,IAAD,CAAM9G,KAAK,WAAWsM,MAAM,WAAY,yBAGhD,kBAACK,GAAD,CAASpQ,MAAO,CAAEG,OAAQ,WACtB,kBAAC,IAAD,CAAYH,MAAO,CAAEG,OAAQ,YAC7B,yBAAKuB,GAAG,YAAY1B,MAAO,CAAEwO,QAAS,GAAIvB,WAAY,OAAQgE,UAAW,SACrE,kBAAC,GAAD,QAGR,kBAACZ,GAAD,CAAQrQ,MAAO,CAAEmR,UAAW,SAAUrJ,OAAQ,GAAIwC,SAAU,GAAIkE,QAAS,KAAzE,uDEpCR,MAAkBmB,SAASyB,eAAe,SD6HpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhQ,MAAK,SAAAiQ,GACjCA,EAAaC,kB","file":"static/js/main.782bb9c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kois-welcome.4d70ee5d.png\";","module.exports = __webpack_public_path__ + \"static/media/user.a9210b59.png\";","module.exports = __webpack_public_path__ + \"static/media/scvlogo.001b21b6.png\";","module.exports = __webpack_public_path__ + \"static/media/koislogo.e5789706.png\";","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function RouteWrapper({\r\n    component: Component,\r\n    isPrivate,\r\n    ...rest\r\n}) {\r\n    const signed = localStorage.getItem('_kToken');\r\n    return (isPrivate && !signed) ? <Redirect to=\"/login?status=906\" /> : <Route {...rest} component={Component} />\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n    isPrivate: PropTypes.bool,\r\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n    isPrivate: false\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport WelcomeImage from './../images/kois-welcome.png';\r\n\r\nexport default () => (\r\n    <img\r\n        src={WelcomeImage}\r\n        style={{ \r\n            width: \"calc(100% + 62px)\",\r\n            maxHeight: \"80vh\",\r\n            margin: -31\r\n        }} \r\n    />\r\n)","import axios from 'axios';\r\n\r\n// if development mode use another separate server for api\r\nconst _API_ = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? 'localhost:5000' : '';\r\n\r\n\r\naxios.interceptors.response.use(response => {\r\n    return response;\r\n }, error => {\r\n   if (error.response.status === 401) {\r\n       window.location = '/login?status=401';\r\n   } else if (error.response.status === 406) {\r\n        window.location = '/login?status=406';\r\n   }\r\n   return error;\r\n });\r\n\r\nexport default class {\r\n    static async register({ name, email, password, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/user`, { name, email, password  }, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async login({ email, password }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/login`, {\r\n                email: email,\r\n                password: password\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async getUsers(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/auth/user`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n\r\n    static async getUser({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/auth/user/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n\r\n    static async createPoint({ data, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/common/point`, JSON.stringify({data: data}), {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(() => resolve({ error: true }));\r\n        });\r\n    }\r\n\r\n\r\n    static async getPoints(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/common/point`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    static async getPoint({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/common/point/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n\r\n    static async updatePoint({ id, data, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/common/point/${id}`, JSON.stringify({data: data}), {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(() => resolve({ error: true }));\r\n        });\r\n    }\r\n\r\n    \r\n    static async deletePoint({ id, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.delete(`${_API_}/api/common/point/${id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nexport default (props) => {\r\n    const history = useHistory();\r\n    const [ dispalyForm, setDisplayForm ] = useState(false);\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        const loginURL = window.location.href;\r\n        let status = null;\r\n        ['401', '406', '420', '906'].forEach(_status => {\r\n            if (loginURL.includes(_status)) {\r\n                status = _status;\r\n                return;\r\n            }\r\n        });\r\n        if (status) {\r\n            const msg = {\r\n                '401': 'Preusmeritev zaradi avtorizacije uporabnika!',\r\n                '406': 'Prijava ni bila uspešna!',\r\n                '420': 'Odjava je bila uspešna!',\r\n                '906': 'Do te strani nimate dodeljenih pravic!'\r\n            };\r\n            Swal.fire({\r\n                icon: (status == 420) ? 'success' : 'error',\r\n                title: msg[status]\r\n            }).then(() => {\r\n                window.location.href = loginURL.substring(0, loginURL.indexOf('?'));\r\n            });\r\n        } else {\r\n            setDisplayForm(true);\r\n        }\r\n        localStorage.removeItem('_kToken');\r\n    }, []);\r\n\r\n    const validateForm = () => {\r\n        const { email , password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) && password.length > 4;\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        if (!validateForm()) return;\r\n        const login = await _api.login(form);\r\n        if (login.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Prijava je bila uspešna!'\r\n            }).then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload();\r\n            });\r\n            localStorage.setItem('_kToken', login.data.token);\r\n        }\r\n    };\r\n\r\n    if (dispalyForm) {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                    <input \r\n                        id=\"email\"\r\n                        type=\"email\" \r\n                        className=\"form-control\" \r\n                        value={form.email} \r\n                        minLength=\"5\"\r\n                        onChange={event => {\r\n                            setForm({ email: event.target.value, password: form.password })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                    <input \r\n                        id=\"password\"\r\n                        type=\"password\" \r\n                        minLength=\"5\"\r\n                        className=\"form-control\" \r\n                        value={form.password} \r\n                        onChange={event => {\r\n                            setForm({ email: form.email, password: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon=\"login\"\r\n                    shape=\"round\"\r\n                    className=\"login-form-button\"\r\n                    onClick={handleLogin}\r\n                    disabled={!validateForm()}\r\n                >Prijava\r\n                </Button>\r\n            </form>\r\n        );\r\n    } else {\r\n        return <></>\r\n    }\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function({ title, link, icon, css, shape }) {\r\n  return (\r\n    <>\r\n      <Link to={link}>\r\n        <Button type={css || 'primary'} icon={icon} shape={shape || 'round'} size={\"large\"} >\r\n            {title}\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Tooltip, Spin } from \"antd\";\r\nimport KoisLink from \"./../common/buttonlink\";\r\nimport _api from \"./../common/apimethods\";\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function () {\r\n    const history = useHistory();\r\n    const [points, setPoints] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPoints();\r\n    }, []);\r\n\r\n    async function getPoints() {\r\n        const token = localStorage.getItem(\"_kToken\");\r\n        const response = await _api.getPoints(token);\r\n        if (response.status == 200) {\r\n            setPoints(response.data);\r\n        }\r\n    }\r\n\r\n    async function deletePoint(id) {\r\n        const _AUTH = localStorage.getItem(\"_kToken\");\r\n        Swal.fire({\r\n            title: 'Ali ste prepričani?',\r\n            text: \"Točko boste popolnoma odstranili iz kois sistema!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Da odstrani jo!'\r\n        }).then(async (result) => {\r\n            if (result.value) {\r\n                const response = await _api.deletePoint({ id, _AUTH });\r\n                if (response.status == 200) {\r\n                    Swal.fire(\r\n                        'Uspešno odstranjeno!',\r\n                        'Točka je bila odstranjena.',\r\n                        'success'\r\n                    );\r\n                    getPoints();   \r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    if (points.length) {\r\n        return (\r\n            <div style={{ maxWidth: \"100%\" }}>\r\n                <KoisLink\r\n                    {...{ title: \"Dodaj točko\", link: \"/new/point\", icon: \"plus\" }}\r\n                />\r\n                <hr />\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexFlow: \"row wrap\",\r\n                        position: \"relative\"\r\n                    }}\r\n                >\r\n                    {points.map(({ tabs, _id }, index) => (\r\n                        <Card\r\n                            key={index}\r\n                            hoverable\r\n                            style={{\r\n                                flex: \"0 1 calc(25% - 16px)\",\r\n                                minWidth: \"250px\",\r\n                                maxWidth: \"60vh\",\r\n                                margin: \"8px\"\r\n                            }}\r\n                            cover={\r\n                                <img src={tabs[0].images[0]} />\r\n                            }\r\n                        >\r\n                            <Meta title={tabs[0].title} />\r\n                            <hr />\r\n                            <Tooltip title=\"Podroben ogled\">\r\n                                <Button\r\n                                    style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                                    type=\"secondary\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"fullscreen\"\r\n                                    size={\"large\"}\r\n                                    onClick={() => history.push(`/detailed/point/${_id}`)}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Uredi\">\r\n                                <Button\r\n                                    style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                                    type=\"primary\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"edit\"\r\n                                    size={\"large\"}\r\n                                    onClick={() => history.push(`/edit/point/${_id}`)}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Odstrani točko\">\r\n                                <Button\r\n                                    style={{ float: \"right\" }}\r\n                                    type=\"danger\"\r\n                                    shape=\"circle\"\r\n                                    icon=\"delete\"\r\n                                    size={\"large\"}\r\n                                    onClick={() => deletePoint(_id)}\r\n                                />\r\n                            </Tooltip>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div><Spin size=\"large\" /></div>\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { List, Avatar, Button, Spin } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport _api from './../common/apimethods';\r\nimport UserIcon from './../images/user.png';\r\n\r\nexport default function () {\r\n    const [admins, setAdmins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAdmins();\r\n    }, []);\r\n\r\n    async function getAdmins() {\r\n        const token = localStorage.getItem('_kToken');\r\n        const response = await _api.getUsers(token);\r\n        if (response.status == 200) {\r\n            setAdmins(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    if (admins.length) {\r\n        return (\r\n            <div>\r\n                <KoisLink {...{ title: \"Dodaj administratorja\", link: '/new/admin', icon: 'plus' }} />\r\n                <hr />\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={admins}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src={UserIcon} />\r\n                                }\r\n                                title={item.name}\r\n                                description={item.email}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div><Spin size=\"large\" /></div>\r\n    }\r\n}\r\n","import React, { useEffect, useRef, useState  } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport $ from \"jquery\";\r\n\r\nexport default function ({ content, toggle, visibility, title, confirm }) {\r\n\r\n    const didMountRef = useRef(false);\r\n    const [mount, setMount] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (title != 'Izbirnik lokacije') {\r\n            setMount(true);\r\n            if (didMountRef.current) {\r\n                $('textarea').each(function() {\r\n                    $(this).height(0).height(this.scrollHeight)\r\n                });\r\n            } else didMountRef.current = true;\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <Modal\r\n            title={title}\r\n            visible={visibility}\r\n            onOk={confirm ? confirm : toggle}\r\n            onCancel={toggle}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            width={\"50vw\"}\r\n        >{content}</Modal>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Modal, List, Avatar, Tooltip, Spin } from \"antd\";\r\nimport LocationPicker from \"react-location-picker\";\r\nimport KoisModal from './../common/modal';\r\nimport Swal from 'sweetalert2';\r\nimport _api from './../common/apimethods';\r\n\r\nexport default function ({ type }) {\r\n    const [modal, setModalVisibility] = useState(false);\r\n    const [modalIndex, setModalIndex] = useState(null);\r\n    const [updateIndex, setUpdateIndex] = useState(null);\r\n    const [position, setPosition] = useState({ lat: 46.4441, lng: 15.197 });\r\n    const [tabs, setTabs] = useState([]);\r\n    const [pointForm, setPointForm] = useState({\r\n        title: '',\r\n        images: '',\r\n        description: ''\r\n    });\r\n\r\n\r\n\r\n    const handleLocationChange = ({ position, address, places }) => {\r\n        setPosition(position);\r\n    };\r\n\r\n    const getPoint = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const response = await _api.getPoint({ id, _AUTH });\r\n        if (response.status == 200) {\r\n            const responseLocation = response.data.location;\r\n            setTabs(response.data.tabs);\r\n            setPosition({ lat: responseLocation.lat, lng: responseLocation.lon })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type == 'edit') getPoint();\r\n    }, []);\r\n\r\n    const toggleModal = () => { \r\n        if (['pointForm', 'updatePointForm'].includes(modalIndex) && modal == true) {\r\n            setPointForm({\r\n                title: '',\r\n                images: '',\r\n                description: ''\r\n            });\r\n        }\r\n        setModalVisibility(!modal);\r\n    }\r\n\r\n    const hanldeOK = () => {\r\n        if (['pointForm', 'updatePointForm'].includes(modalIndex)) {\r\n            let { title, images, description } = pointForm;\r\n            images = images.split('\\n');\r\n            if(validatePointForm()) {\r\n                if (modalIndex == 'pointForm') {\r\n                    setTabs([...tabs, { title, description, images }]);\r\n                    setPointForm({\r\n                        title: '',\r\n                        images: '',\r\n                        description: ''\r\n                    });\r\n                } else {\r\n                    const tabsUpdate = tabs;\r\n                    tabsUpdate[updateIndex] = { title, description, images };\r\n                    setTabs([...tabsUpdate]);\r\n                    setPointForm({\r\n                        title: '',\r\n                        images: '',\r\n                        description: ''\r\n                    });\r\n                }\r\n\r\n                setModalVisibility(false);\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Obrazca niste pravilno izpolnili!'\r\n                });\r\n            }\r\n\r\n        } else setModalVisibility(false);\r\n    };\r\n\r\n    const validatePointForm = () => {\r\n        const validFileds = Object.values(pointForm).filter(item => item.length).length;\r\n        return Object.values(pointForm).length == validFileds;\r\n    }\r\n\r\n    const getPointFormModal = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Naslov</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={pointForm.title}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, title: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Povezave slik</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.images}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, images: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Opis</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.description}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, description: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const getLocationFormModal = () => {\r\n        return (<LocationPicker\r\n            containerElement={<div style={{ height: \"100%\" }} />}\r\n            mapElement={<div style={{ height: \"400px\" }} />}\r\n            defaultPosition={position}\r\n            onChange={handleLocationChange}\r\n        />);\r\n    }\r\n\r\n    const editPrimarySubmit = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const data = {\r\n            location: { ...position, lon: position.lng },\r\n            tabs: tabs\r\n        };\r\n        const response = await _api.updatePoint({ id, data, _AUTH })\r\n        if (response.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Točka je bila uspešno posodobljena!'\r\n            });\r\n        }\r\n    }\r\n\r\n    const addPrimarySubmit = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const data = {\r\n            location: { ...position, lon: position.lng },\r\n            tabs: tabs\r\n        };\r\n        const response = await _api.createPoint({ data, _AUTH})\r\n        if (response.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Točka je bila uspešno dodana!'\r\n            });\r\n            setTabs([]);\r\n        }\r\n    }\r\n\r\n    const getModalContent = () => {\r\n        switch (modalIndex) {\r\n\r\n            case 'locationPicker':\r\n                return getLocationFormModal();\r\n\r\n            case 'pointForm':\r\n            case 'updatePointForm':\r\n                return getPointFormModal();\r\n\r\n            default:\r\n                return '<p>Prišlo je do napake!</p>'\r\n        }\r\n    }\r\n\r\n    const getModalTitle = {\r\n        'pointForm': 'Dodaj zavihek',\r\n        'updatePointForm': 'Posodobi zavihek',\r\n        'locationPicker': 'Izbirnik lokacije'\r\n    }\r\n\r\n\r\n    const openEditTabModal = index => {\r\n        setUpdateIndex(index);\r\n        toggleModal(true); \r\n        setModalIndex('updatePointForm');\r\n        const tabForEdit = tabs[index];\r\n        setPointForm({ ...tabForEdit, images: tabForEdit.images.join('\\n') })\r\n\r\n    }\r\n\r\n    const deleteTab = index => {\r\n        Swal.fire({\r\n            title: 'Ali ste prepričani?',\r\n            text: \"Zavihek boste popolnoma odstranili iz točke!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Da!'\r\n          }).then(async (result) => {\r\n            if (result.value) {\r\n                setTabs([...tabs.filter((item, itemIndex) => itemIndex != index)]);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (type == \"edit\" && !tabs.length) {\r\n        return <div><Spin size=\"large\" /></div>\r\n    } else {\r\n        return !modal ? (\r\n            <Form style={{ minWidth: \"50%\" }}>\r\n                <Form.Item>\r\n                    <Button\r\n                        icon=\"folder-add\" \r\n                        shape=\"round\" \r\n                        onClick={() => { toggleModal(true); setModalIndex('pointForm'); }}\r\n                    >\r\n                        Dodaj zavihek\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => { toggleModal(true); setModalIndex('locationPicker'); }}\r\n                        style={{ marginLeft: 10 }}\r\n                        icon=\"select\"\r\n                        shape=\"round\"\r\n                        htmlType=\"button\"\r\n                        className=\"login-form-button\"\r\n                    >\r\n                        Izberi lokacijo\r\n                    </Button>\r\n                    <span style={{ fontSize: 18, marginLeft: 10 }}>\r\n                        <Icon type=\"environment\" style={{ color: \"#66c\" }} />{\" \"}zemljepisna dolžina:{\" \"}\r\n                        <b>{position.lng}</b>{\" \"}zemljepisna širina:{\" \"}\r\n                        <b>{position.lat}</b>\r\n                    </span>\r\n                    <hr />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={tabs}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item \r\n                                actions={[\r\n                                    <Tooltip title=\"Uredi zavihek\">\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            shape=\"circle\"\r\n                                            icon=\"edit\"\r\n                                            size={\"large\"}\r\n                                            onClick={() => openEditTabModal(index)}\r\n                                        />\r\n                                    </Tooltip>,\r\n                                    <Tooltip title=\"Odstrani zavihek\">\r\n                                        <Button\r\n                                            type=\"danger\"\r\n                                            shape=\"circle\"\r\n                                            icon=\"delete\"\r\n                                            size={\"large\"}\r\n                                            onClick={() => deleteTab(index)}\r\n                                        />\r\n                                    </Tooltip>\r\n                                ]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    avatar={\r\n                                        <Avatar src={item.images[0]} />\r\n                                    }\r\n                                    title={item.title}\r\n                                    description={(item.description.length > 100 ? item.description.substr(0,100) : item.description) + \"...\"}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    <hr />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        onClick={type == \"edit\" ? editPrimarySubmit : addPrimarySubmit}\r\n                        type=\"primary\"\r\n                        icon=\"environment\"\r\n                        shape=\"round\"\r\n                        htmlType=\"submit\"\r\n                        className=\"login-form-button\"\r\n                        disabled={!tabs.length}\r\n                    >\r\n                        {type == \"edit\" ? \"Posodobi točko\" : \"Dodaj točko\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        ) : (\r\n            <KoisModal {...{\r\n                title: getModalTitle[modalIndex],\r\n                content: getModalContent(modalIndex),\r\n                visibility: modal,\r\n                toggle: toggleModal,\r\n                confirm: hanldeOK\r\n            }} />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst { useState } = React;\r\n\r\nexport default () => {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { name, email, password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) \r\n            && password.length > 4\r\n            && name.length > 4;\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        if (!validateForm()) return;\r\n        const _AUTH = localStorage.getItem(\"_kToken\");\r\n        const register = await _api.register({...form, _AUTH });\r\n        if (register.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Uporabnik je bil uspešno dodan!'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"name\" className=\"bmd-label-floating\">Ime & Priimek</label>\r\n                <input \r\n                    id=\"name\"\r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={form.name} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, name: event.target.value  })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, email: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ ...form, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleRegister}\r\n                disabled={!validateForm()}\r\n            >Registracija\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button, Select, Spin, Tooltip } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport _api from './../common/apimethods';\r\nimport map from 'svg-world-map';\r\nimport stringify from 'virtual-dom-stringify';\r\nimport moment from 'moment';\r\nimport $ from 'jquery';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default function () {\r\n    const [point, setPoint] = useState(null);\r\n    const [dropDownIndex, setDropDownIndex] = useState(0);\r\n    const [userCreated, setUserCreated] = useState(null);\r\n    const [userUpdated, setUserUpdated] = useState(null);\r\n\r\n    async function getPoint() {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const url = window.location.href;\r\n        const id = url.substr(url.lastIndexOf('/') + 1);\r\n        const response = await _api.getPoint({ id, _AUTH });\r\n        if (response.status == 200) {\r\n            setUser(response.data.userUpdated, 'updated');\r\n            setUser(response.data.userCreated, 'created');\r\n            setPoint(response.data);\r\n        }\r\n    }\r\n\r\n    async function setUser(idUser, whichUser) {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const response = await _api.getUser({ id: idUser, _AUTH });\r\n        if (response.status == 200) {\r\n            if (whichUser == 'created') setUserCreated(response.data._doc.name);\r\n            else setUserUpdated(response.data._doc.name);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPoint();\r\n    }, []);\r\n\r\n    if (point) {\r\n        const { tabs } = point;\r\n        const openedTab = tabs[dropDownIndex];\r\n        const { lat, lon } = point.location;\r\n        const drawMarker = map(lon, lat);\r\n        const createdData = [{\r\n                key: \"Točka je bila ustvarjena:\",\r\n                value: moment(point.createdAt).format('DD. MM. YYYY')\r\n            }, {\r\n                key: \"Točko je ustvarjil/a:\",\r\n                value: userCreated\r\n            }, {\r\n                key: \"Točka je bila posodobljena:\",\r\n                value: moment(point.updatedAt).format('DD. MM. YYYY')\r\n            },{\r\n                key: \"Točko je posodobil/a:\",\r\n                value: userUpdated\r\n        }];\r\n\r\n        const imgToFull = src => {\r\n                $('<div>')\r\n                    .css({\r\n                        background: `#0f0f0f99 url('${src}') no-repeat center`,\r\n                        backgroundSize: 'contain',\r\n                        width:'100%', height:'100%',\r\n                        position:'fixed', zIndex:'10000',\r\n                        top:'0', left:'0',\r\n                    })\r\n                    .click(function(){ $(this).remove() })\r\n                    .appendTo('body');\r\n        };\r\n\r\n        const convertToDMS = loc => {\r\n            const deg = loc | 0,\r\n                frac = Math.abs(loc - deg),\r\n                min = (frac * 60) | 0,\r\n                sec = frac * 3600 - min * 60;\r\n\r\n            return `${deg ? deg : 0}°${min ? min : 0}'${sec ? sec : 0}\"`;\r\n        }\r\n\r\n        const openMaps = () => {\r\n            const north = convertToDMS(lat);\r\n            const east = convertToDMS(lon);\r\n            window.open(`https://www.google.com/maps/place/${north}N${east}E/\"`);\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {(tabs.length > 1) && (\r\n                    <>\r\n                        <div>\r\n                            <Select defaultValue={tabs[0].title} style={{ width: \"100%\" }} onChange={setDropDownIndex}>\r\n                                {tabs.map(({ title }, index) => (\r\n                                    <Option value={index}>{title}</Option>\r\n                                ))}\r\n                            </Select>\r\n                        </div>\r\n\r\n                        <hr/>\r\n                    </>\r\n                )}\r\n\r\n                <div id=\"headerimg\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\" style={{ height: \"70vh\", background: \"#2f3e53\" }}>\r\n                        {openedTab.images.map((image, i) => (\r\n                            <div style={{ height: \"70vh\" }} className={`carousel-item ${i == 0 ? \"active\" : \"\"}`}>\r\n                                <img\r\n                                    className=\"d-block\"\r\n                                    onClick={() => imgToFull(image)}\r\n                                    src={image} \r\n                                    alt=\"Kois Image\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {(openedTab.images.length > 1) && (\r\n                        <>\r\n                            <ol className=\"carousel-indicators\">\r\n                                {openedTab.images.map((image, i) => (\r\n                                    <li data-target=\"#headerimg\" data-slide-to={i} className={i == 0 ? \"active\" : \"\"}></li>\r\n                                ))}\r\n                            </ol>\r\n\r\n                            <a className=\"carousel-control-prev\" href=\"#headerimg\" role=\"button\" data-slide=\"prev\">\r\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Previous</span>\r\n                            </a>\r\n                            <a className=\"carousel-control-next\" href=\"#headerimg\" role=\"button\" data-slide=\"next\">\r\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                <span className=\"sr-only\">Next</span>\r\n                            </a>\r\n                        </>\r\n                    )}\r\n \r\n                </div>\r\n    \r\n                <div style={{ marginTop: 20 }}>\r\n                    <h1 style={{ float: \"left\" }}>{openedTab.title}</h1>\r\n                    <Tooltip style={{ float: \"right\" }} title=\"Odpri v google maps\">\r\n                        <Button\r\n                            style={{ marginRight: 20, float: \"right\" }}\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            icon=\"environment\"\r\n                            size={\"large\"}\r\n                            onClick={openMaps}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                \r\n                <hr style={{ clear: \"both\" }} />\r\n                <span \r\n                    stlye={{ padding: 30 }} \r\n                    dangerouslySetInnerHTML={{ __html: openedTab.description.replace(/\\n/g, \"<br />\")}} \r\n                />\r\n                <hr />\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }} >\r\n                    <div style={{ margin: 20, width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                        <ul class=\"list-group\">\r\n                            {createdData.map(({ key, value }) => (\r\n                                <a class=\"list-group-item\">\r\n                                    <div class=\"bmd-list-group-col\">\r\n                                        <p class=\"list-group-item-heading\">{key}</p>\r\n                                        <p class=\"list-group-item-text\"><b>{value}</b></p>\r\n                                    </div>\r\n                                </a>   \r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div \r\n                        style={{ margin: 20, width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                        dangerouslySetInnerHTML={{ __html: stringify(drawMarker)}} \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div><Spin size=\"large\" /></div>\r\n    }\r\n}\r\n","import { Router, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Route from './routewrapper';\r\n\r\n//rotes import\r\nimport Home from \"./../containers/Home\";\r\nimport Login from \"./../containers/Login\";\r\nimport Points from \"./../containers/Points\";\r\nimport Admins from \"./../containers/Admins\";\r\n\r\n//import forms\r\nimport FPoint from \"./../forms/fPoint\";\r\nimport FAdmin from \"./../forms/fAdmin\";\r\n\r\n//import detail views\r\nimport DPoint from \"./../detailed/dpoint\";\r\n\r\nexport default function () {\r\n    const _R = [\r\n        // auth route\r\n        { path: \"/login\", component: <Login />, authRequired: false },\r\n\r\n        // common routes\r\n        { path: \"/points\", component: <Points />, authRequired: true },\r\n        { path: \"/admins\", component: <Admins />, authRequired: true },\r\n\r\n        // form routes\r\n        { path: \"/new/point\", component: <FPoint {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/new/admin\", component: <FAdmin {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/edit/point/:id\", component: <FPoint {...{ type: \"edit\" }} />, authRequired: true },\r\n\r\n        // detailed view routes\r\n        { path: \"/detailed/point/:id\", component: <DPoint />, authRequired: true },\r\n\r\n        // home route\r\n        { path: '', component: <Home />, authRequired: false },\r\n    ];\r\n\r\n    return (\r\n        <Switch>\r\n            {_R.map(({ path, component, authRequired }, index) => (\r\n                <Route key={index} path={path} isPrivate={authRequired || false} >{component}</Route>\r\n            ))}\r\n        </Switch>\r\n    );\r\n}\r\n","import KoisLogo from \"./../images/scvlogo.png\";\r\nimport ScvLogo from \"./../images/koislogo.png\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <div style={{ padding: 10 }}>\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            marginBottom: 15\r\n          }}\r\n          src={KoisLogo}\r\n        />\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 20,\r\n            paddingBottom: 0\r\n          }}\r\n          src={ScvLogo}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button, Menu } from \"antd\";\r\nimport React from 'react';\r\n\r\n// ONLY USED IN app.js !!!!!\r\n// otherwise we use buttonlink.js\r\n\r\nexport default function({ title, link, icon }) {\r\n    return (\r\n        <span id={link} >\r\n            <Icon type={icon} />\r\n            <span>{title}</span>\r\n        </span>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/menulink';\r\n\r\nexport default function () {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => \r\n        document.querySelectorAll('.ant-menu-item').forEach(item => \r\n            item.addEventListener('click', async event => {\r\n                if (item.firstChild.id == '/login') await localStorage.removeItem('_kToken');\r\n                history.push(item.firstChild.id);\r\n            })\r\n        ), []);\r\n\r\n    const navigationItems = [\r\n        { link: \"/\", title: \"Domov\", icon: \"home\" },\r\n        { link: \"/points\", title: \"Točke\", icon: \"environment\" },\r\n        { link: \"/admins\", title: \"Administratorji\", icon: \"user\" },\r\n        { link: \"/login?status=420\", title: \"Odjava\", icon: \"logout\" }\r\n    ];\r\n\r\n    return (\r\n        <Menu theme=\"dark\" style={{ background: \"#47515a\" }} mode=\"inline\">\r\n            {navigationItems.map((navItem, index) => (\r\n                <Menu.Item key={index}>\r\n                    <KoisLink {...navItem} />\r\n                </Menu.Item>\r\n            ))}            \r\n        </Menu>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/menulink';\r\n\r\nexport default function () {\r\n    const history = useHistory();\r\n\r\n    useEffect(() => \r\n        document.querySelectorAll('.ant-menu-item').forEach(item => \r\n            item.addEventListener('click', async () => history.push(item.firstChild.id))\r\n    ), []);\r\n\r\n    const navigationItems = [\r\n        { link: \"/\", title: \"Domov\", icon: \"home\" },\r\n        { link: \"/login\", title: \"Prijava\", icon: \"login\" }\r\n    ];\r\n    \r\n    return (\r\n        <Menu theme=\"dark\" style={{ background: \"#47515a\" }} mode=\"inline\">\r\n            {navigationItems.map((navItem, index) => (\r\n                <Menu.Item key={index}>\r\n                    <KoisLink {...navItem}/>\r\n                </Menu.Item>\r\n            ))}\r\n        </Menu>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from \"antd\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport KoisHistory from './history';\r\n\r\nimport KoisRouter from \"./common/router\";\r\nimport KoisLogos from \"./common/logos\";\r\n\r\n//import navigation\r\nimport IsAuthNav from \"./navs/isauth\";\r\nimport NonAuthNav from \"./navs/nonauth\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default function () {\r\n    const [isAuth, setAuth] = useState(localStorage.getItem(\"_kToken\") || undefined);\r\n\r\n    return (\r\n        <Router history={KoisHistory}>\r\n            <Layout style={{ minHeight: \"100vh\" }}>\r\n                <BrowserRouter>\r\n                    <Sider width={\"17%\"} collapsed={false}>\r\n                        <KoisLogos />\r\n                        {isAuth ? <IsAuthNav /> : <NonAuthNav />}\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: \"#2f3e53\", padding: 10 }} >\r\n                            <Title style={{ color: \"#fff\" }}>\r\n                                <Icon type=\"database\" theme=\"filled\" />{\" Kois Administracija\"}\r\n                            </Title>\r\n                        </Header>\r\n                        <Content style={{ margin: \"0 16px\" }}>\r\n                            <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n                            <div id=\"container\" style={{ padding: 15, background: \"#fff\", minHeight: \"40vh\" }}>\r\n                                <KoisRouter />\r\n                            </div>\r\n                        </Content>\r\n                        <Footer style={{ textAlign: \"center\", height: 48, fontSize: 16, padding: 11 }}>\r\n                            Samo Pritrznik & Janez Sedeljsak 2019/20 ©\r\n                        </Footer>\r\n                    </Layout>\r\n                </BrowserRouter>\r\n            </Layout>\r\n        </Router>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}