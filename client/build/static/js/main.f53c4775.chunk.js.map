{"version":3,"sources":["images/scvlogo.png","images/koislogo.png","common/apimethods.js","containers/Login.js","common/buttonlink.js","containers/Points.js","containers/Admins.js","containers/Tasks.js","containers/Documentation.js","forms/fPoint.js","forms/fAdmin.js","forms/fTask.js","detailed/dpoint.js","common/router.js","common/logos.js","common/link.js","navs/isauth.js","navs/nonauth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fullname","email","password","_AUTH","_response","ok","msg","axios","post","params","name","headers","then","response","catch","console","log","_email","_password","_id","id","get","Form","create","form","getFieldDecorator","style","width","minWidth","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","a","async","API","login","result","Item","label","hasFeedback","rules","type","message","required","prefix","color","Password","shape","icon","htmlType","title","link","css","to","size","Meta","Card","display","flexFlow","position","map","item","index","key","hoverable","flex","margin","cover","src","float","marginLeft","href","itemLayout","dataSource","renderItem","avatar","description","useState","modal","setModalVisibility","lat","lng","setPosition","toggleModal","visible","onOk","onCancel","cancelButtonProps","containerElement","height","mapElement","defaultPosition","onChange","address","places","onClick","className","confirmDirty","setConfirmDirty","register","validator","rule","value","callback","validateFields","force","getFieldValue","onBlur","target","TextArea","Input","rows","_R","path","component","Login","Points","Admins","Documentation","Tasks","padding","marginBottom","KoisLogo","paddingBottom","ScvLogo","theme","background","mode","Header","Layout","Content","Footer","Sider","Title","Typography","Boolean","window","location","hostname","match","ReactDOM","render","collapsed","setCollapsed","localStorage","getItem","undefined","isAuth","minHeight","collapsible","onCollapse","borderLeft","boxShadow","textAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f53c4775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scvlogo.001b21b6.png\";","module.exports = __webpack_public_path__ + \"static/media/koislogo.e5789706.png\";","import axios from 'axios';\r\n\r\nexport default class {\r\n    static async register(fullname, email, password, _AUTH) {\r\n        let _response = { ok: false, msg: 'error occured' };\r\n        await axios.post('/api/auth/register', {\r\n            params: {\r\n                name: fullname,\r\n                email: email,\r\n                password: password\r\n            },\r\n            headers: {\r\n                'Authorization': `Token ${_AUTH}`,\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n        })\r\n            .then((response) => _response = response)\r\n            .catch(console.log);\r\n        \r\n        return _response;\r\n    }\r\n\r\n    static async login(_email, _password) {\r\n        let _response = { ok: false, msg: 'error occured' };\r\n        await axios.post('/api/auth/login', {\r\n            params: {\r\n                email: _email,\r\n                password: _password\r\n            }\r\n        })\r\n            .then((response) => _response = response)\r\n            .catch(console.log);\r\n        \r\n        return _response;\r\n    }\r\n\r\n    static async delUser(_id, _AUTH) {\r\n        let _response = { ok: false, msg: 'error occured' };\r\n        await axios.post('/api/auth/login', {\r\n            params: {\r\n                id: _id\r\n            },\r\n            headers: {\r\n                'Authorization': `Token ${_AUTH}`,\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        })\r\n            .then((response) => _response = response)\r\n            .catch(console.log);\r\n        \r\n        return _response;\r\n    }\r\n\r\n    static async getUser(_id, _AUTH) {\r\n\r\n    }\r\n\r\n    static async getUsers(_AUTH) {\r\n        let _response = { ok: false, msg: 'error occured' };\r\n        await axios.get('/api/auth/users', {\r\n            headers: {\r\n                'Authorization': `Token ${_AUTH}`,\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        })\r\n            .then((response) => _response = response)\r\n            .catch(console.log);\r\n        \r\n        return _response;\r\n    }\r\n\r\n    static async updateUser() {\r\n\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport API from './../common/apimethods';\r\n\r\nfunction LoginForm({ form }) {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFieldsAndScroll(async (err, values) => {\r\n      if (!err) {\r\n        let { email, password } = values;\r\n        let result = await API.login(values);\r\n        console.log(result);\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n      <Form.Item label=\"e-pošta\" hasFeedback>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [\r\n            {\r\n              type: \"email\",\r\n              message: \"Neveljavna e-pošta!\"\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite vašo e-pošto!\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"geslo\" hasFeedback>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite vaše geslo!\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input.Password\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" shape=\"round\" icon=\"user\" htmlType=\"submit\">\r\n          Prijava\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create({ name: \"login\" })(LoginForm);\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function({ title, link, icon, css, shape }) {\r\n  return (\r\n    <>\r\n      <Link to={link}>\r\n        <Button type={css || 'primary'} icon={icon} shape={shape || 'round'} size={\"large\"} >\r\n            {title}\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, Tooltip } from \"antd\";\r\nimport KoisLink from \"./../common/buttonlink\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <KoisLink\r\n        {...{ title: \"Dodaj točko\", link: \"/new/point\", icon: \"plus\" }}\r\n      />\r\n      <hr />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexFlow: \"row wrap\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        {[1, 2, 3, 4, 5, 6, 7, 8].map((item, index) => (\r\n          <Card\r\n            key={index}\r\n            hoverable\r\n            style={{\r\n              flex: \"0 1 calc(25% - 16px)\",\r\n              margin: \"8px\",\r\n            }}\r\n            cover={\r\n              <img src=\"https://geospatialmedia.s3.amazonaws.com/wp-content/uploads/2018/11/location-tech.jpg\" />\r\n            }\r\n          >\r\n            <Meta title=\"Random location\" />\r\n            <hr />\r\n            <Tooltip title=\"Podroben ogled\">\r\n              <Button\r\n                style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                type=\"secondary\"\r\n                shape=\"circle\"\r\n                icon=\"fullscreen\"\r\n                size={\"large\"}\r\n                href={`/details/point/${index}`}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Uredi\">\r\n              <Button\r\n                style={{ float: \"right\" }}\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size={\"large\"}\r\n                href={`/edit/point/${index}`}\r\n              />\r\n            </Tooltip>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { List, Avatar, Button } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nexport default function () {\r\n    const data = [\r\n        { title: \"Ant Design Title 1\" },\r\n        { title: \"Ant Design Title 2\" },\r\n        { title: \"Ant Design Title 3\" },\r\n        { title: \"Ant Design Title 4\" }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <KoisLink {...{ title: \"Dodaj administratorja\", link: '/new/admin', icon: 'plus' }} />\r\n            <hr />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                            }\r\n                            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { List, Avatar, Button } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\n\r\nexport default function () {\r\n    const data = [\r\n        { title: \"Ant Design Title 1\" },\r\n        { title: \"Ant Design Title 2\" },\r\n        { title: \"Ant Design Title 3\" },\r\n        { title: \"Ant Design Title 4\" }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <KoisLink {...{ title: \"Dodaj zahtevek\", link: '/new/task', icon: 'plus' }} />\r\n            <hr />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://cdn0.iconfinder.com/data/icons/education-gamification/1000/Task_Complete-512.png\" />\r\n                            }\r\n                            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function() {\r\n\r\n  return (\r\n    <div>\r\n        serbus\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Modal, List, Avatar } from \"antd\";\r\nimport LocationPicker from \"react-location-picker\";\r\n\r\nexport default function({ type }) {\r\n  const [modal, setModalVisibility] = useState(false);\r\n  const [position, setPosition] = useState({ lat: 46.4441, lng: 15.197 });\r\n  const tabs = [];\r\n\r\n  const handleLocationChange = ({ position, address, places }) => {\r\n    setPosition(position);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalVisibility(!modal);\r\n  };\r\n\r\n  return !modal ? (\r\n    <Form style={{ minWidth: \"50%\" }}>\r\n      <Form.Item>\r\n        <Button\r\n          onClick={toggleModal}\r\n          icon=\"select\"\r\n          shape=\"round\"\r\n          htmlType=\"button\"\r\n          className=\"login-form-button\"\r\n        >\r\n          Izberi lokacijo\r\n        </Button>\r\n        <span>\r\n          {\" \"}\r\n          <Icon type=\"environment\" style={{ color: \"#66c\" }} /> zemljepisna\r\n          dolžina: <b>{position.lng}</b> zemljepisna širina:{\" \"}\r\n          <b>{position.lat}</b>\r\n        </span>\r\n        <hr />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button icon=\"plus\" shape=\"round\">\r\n          Dodaj zavihek\r\n        </Button>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={tabs}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://cdn0.iconfinder.com/data/icons/education-gamification/1000/Task_Complete-512.png\" />\r\n                }\r\n                title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <hr />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          icon=\"environment\"\r\n          shape=\"round\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <Modal\r\n      title=\"Izbirnik lokacije\"\r\n      visible={modal}\r\n      onOk={toggleModal}\r\n      onCancel={toggleModal}\r\n      cancelButtonProps={{ style: { display: 'none' } }}\r\n      width={\"50vw\"}\r\n    >\r\n      <LocationPicker\r\n        containerElement={<div style={{ height: \"100%\" }} />}\r\n        mapElement={<div style={{ height: \"400px\" }} />}\r\n        defaultPosition={position}\r\n        onChange={handleLocationChange}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n","import { Form, Input, Icon, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport API from './../common/apimethods';\r\n\r\nfunction RegistrationForm({ form, type }) {\r\n    const [confirmDirty, setConfirmDirty] = useState(false);\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        form.validateFieldsAndScroll(async (err, values) => {\r\n            if (!err) {\r\n                let { fullname, email, password } = values;\r\n                let result = await API.register({ fullname, email, password, _AUTH: \"tkn\" });\r\n                console.log(result);\r\n                console.log(\"Received values of form: \", values);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        setConfirmDirty(confirmDirty || !!value);\r\n    };\r\n\r\n    const compareToFirstPassword = (rule, value, callback) => {\r\n        if (value && value !== form.getFieldValue(\"password\")) {\r\n            callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    const validateToNextPassword = (rule, value, callback) => {\r\n        if (value && confirmDirty) {\r\n            form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    return (\r\n        <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n            <Form.Item label=\"ime & priimek\">\r\n                {getFieldDecorator(\"fullname\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vaše ime & priimek!\"\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"e-pošta\">\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"Neveljavna e-pošta!\"\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vašo e-pošto!\"\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"geslo\" hasFeedback>\r\n                {getFieldDecorator(\"password\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vaše geslo!\"\r\n                        },\r\n                        {\r\n                            validator: validateToNextPassword\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"potrdi geslo\" hasFeedback>\r\n                {getFieldDecorator(\"confirm\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo ponovite geslo!\"\r\n                        },\r\n                        {\r\n                            validator: compareToFirstPassword\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                        onBlur={handleConfirmBlur}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" shape=\"round\" icon=\"user\" htmlType=\"submit\">\r\n                    {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Form.create({ name: \"admin\" })(RegistrationForm);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction TaskForm({ form, type }) {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n      <Form.Item label=\"naslov\" hasFeedback>\r\n        {getFieldDecorator(\"title\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite naslov!\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"file-text\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"opis\" hasFeedback>\r\n      {getFieldDecorator(\"description\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite opis!\"\r\n            }\r\n          ]\r\n        })(\r\n            <TextArea rows={4} />\r\n        )}\r\n        \r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          icon=\"file\"\r\n          shape=\"round\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create({ name: \"task\" })(TaskForm);\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n        <div>indepth view for point</div>\r\n    </>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n//rotes import\r\nimport Login from \"./../containers/Login\";\r\nimport Points from \"./../containers/Points\";\r\nimport Admins from \"./../containers/Admins\";\r\nimport Tasks from \"./../containers/Tasks\";\r\nimport Documentation from \"./../containers/Documentation\";\r\n\r\n//import forms\r\nimport FPoint from \"./../forms/fPoint\";\r\nimport FAdmin from \"./../forms/fAdmin\";\r\nimport FTask from \"./../forms/fTask\";\r\n\r\n//import detail views\r\nimport DPoint from \"./../detailed/dpoint\";\r\n\r\nexport default function() {\r\n  const _R = [\r\n    // auth route\r\n    { path: \"/login\", component: <Login /> },\r\n\r\n    // common routes\r\n    { path: \"/points\", component: <Points /> },\r\n    { path: \"/admins\", component: <Admins /> },\r\n    { path: \"/documentation\", component: <Documentation /> },\r\n    { path: \"/tasks\", component: <Tasks /> },\r\n\r\n    // form routes\r\n    { path: \"/new/point\", component: <FPoint {...{ type: \"new\" }} /> },\r\n    { path: \"/new/admin\", component: <FAdmin {...{ type: \"new\" }} /> },\r\n    { path: \"/new/task\", component: <FTask {...{ type: \"new\" }} /> },\r\n    { path: \"/edit/point/:id\", component: <FPoint {...{ type: \"edit\" }} /> },\r\n    { path: \"/edit/admin/:id\", component: <FAdmin {...{ type: \"edit\" }} /> },\r\n    { path: \"/edit/task/:id\", component: <FTask {...{ type: \"edit\" }} /> },\r\n\r\n    // detailed view routes\r\n    { path: \"/details/point/:id\", component: <DPoint /> }\r\n  ];\r\n\r\n  return (\r\n    <Switch>\r\n        {_R.map(({ path, component }) => <Route key={path} path={path}>{component}</Route>)}\r\n    </Switch>\r\n  );\r\n}\r\n","import KoisLogo from \"./../images/scvlogo.png\";\r\nimport ScvLogo from \"./../images/koislogo.png\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <div style={{ padding: 20 }}>\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            marginBottom: 15\r\n          }}\r\n          src={KoisLogo}\r\n        />\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 15,\r\n            paddingBottom: 0\r\n          }}\r\n          src={ScvLogo}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon } from \"antd\";\r\nimport React from 'react';\r\n\r\n// ONLY USED IN app.js !!!!!\r\n// otherwise we use buttonlink.js\r\n\r\nexport default function({ title, link, icon }) {\r\n    return (\r\n        <>\r\n            <Link to={link} />\r\n            <Icon type={icon} />\r\n            <span>{title}</span>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/admins\">\r\n        <KoisLink\r\n          {...{ link: \"/admins\", title: \"Administratorji\", icon: \"user\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/tasks\">\r\n        <KoisLink {...{ link: \"/tasks\", title: \"Zahtevki\", icon: \"pushpin\" }} />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Odjava\", icon: \"logout\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Prijava\", icon: \"login\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from \"antd\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport KoisRouter from \"./common/router\";\r\nimport KoisLogos from \"./common/logos\";\r\n\r\n//import navigation\r\nimport IsAuthNav from \"./navs/isauth\";\r\nimport NonAuthNav from \"./navs/nonauth\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default function() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isAuth, setAuth] = useState(localStorage.getItem(\"_kToken\") || undefined);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Router>\r\n        <Sider\r\n          style={{ background: \"#345\" }}\r\n          width={\"300\"}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={setCollapsed}\r\n        >\r\n          {!collapsed && <KoisLogos />}\r\n          {isAuth ? <IsAuthNav /> : <NonAuthNav/>}\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              background: \"#002140\",\r\n              padding: 10,\r\n              borderLeft: \"1px solid white\",\r\n              boxShadow: \"0 4px 2px -2px gray\"\r\n            }}\r\n          >\r\n            <Title style={{ color: \"#fff\" }}>\r\n              <Icon type=\"dashboard\" /> Kois Administracija\r\n            </Title>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n            <div\r\n              id=\"container\"\r\n              style={{ padding: 24, background: \"#fff\", minHeight: \"40vh\" }}\r\n            >\r\n              <KoisRouter />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Samo Pritrznik & Janez Sedeljsak 2019/20 ©\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    </Layout>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}