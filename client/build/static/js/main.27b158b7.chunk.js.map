{"version":3,"sources":["images/scvlogo.png","images/koislogo.png","common/apimethods.js","containers/Login.js","common/buttonlink.js","containers/Points.js","containers/Admins.js","containers/Tasks.js","containers/Documentation.js","common/modal.js","forms/fPoint.js","forms/fAdmin.js","forms/fTask.js","detailed/dpoint.js","common/router.js","common/logos.js","common/link.js","navs/isauth.js","navs/nonauth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fullname","email","password","_AUTH","Promise","resolve","reject","a","async","axios","post","params","name","headers","then","catch","_id","get","_params","put","useState","React","form","setForm","validateForm","test","length","className","type","value","minLength","onChange","event","target","icon","shape","onClick","_api","login","status","localStorage","setItem","data","token","disabled","title","link","css","to","size","Meta","Card","style","display","flexFlow","position","map","item","index","key","hoverable","flex","margin","cover","src","float","marginLeft","href","itemLayout","dataSource","renderItem","Item","avatar","description","content","toggle","visibility","confirm","visible","onOk","onCancel","cancelButtonProps","width","modal","setModalVisibility","modalIndex","setModalIndex","lat","lng","setPosition","tabs","setTabs","images","pointForm","setPointForm","handleLocationChange","address","places","toggleModal","containerElement","height","mapElement","defaultPosition","htmlFor","getModalContent","split","minWidth","htmlType","color","console","log","Form","create","confirmDirty","setConfirmDirty","getFieldDecorator","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","API","register","getItem","result","label","rules","required","message","prefix","hasFeedback","validator","rule","callback","validateFields","force","Password","getFieldValue","onBlur","TextArea","Input","rows","requireAuth","nextState","replaceState","nextPathname","location","pathname","_R","path","component","Login","authRequired","Points","Admins","Documentation","Tasks","onEnter","padding","marginBottom","KoisLogo","paddingBottom","ScvLogo","theme","background","mode","Header","Layout","Content","Footer","Sider","Title","Typography","Boolean","window","hostname","match","ReactDOM","render","collapsed","setCollapsed","undefined","isAuth","minHeight","collapsible","onCollapse","borderLeft","boxShadow","id","textAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,wbCGfC,E,EAAAA,SAAUC,E,EAAAA,MAAOC,E,EAAAA,SAAUC,E,EAAAA,M,kBACxC,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMC,KAAK,iBAAkB,CAC/BC,OAAQ,CACJC,KAAMZ,EACNC,MAAOA,EACPC,SAAUA,GAEdW,QAAS,CACL,cAAgB,SAAhB,OAA0BV,GAC1B,eAAgB,uCAGnBW,KAAKT,GACLU,MAAMT,IAbI,yC,uJAiBFL,E,EAAAA,MAAOC,E,EAAAA,S,kBACjB,IAAIE,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMC,KAAN,kBAA8B,CAChCT,MAAOA,EACPC,SAAUA,IAETY,KAAKT,GACLU,MAAMT,IANI,yC,qEAUFU,EAAKb,G,2FACf,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMC,KAAN,gCAAoCM,GAAO,CAC7CH,QAAS,CACL,cAAgB,SAAhB,OAA0BV,GAC1B,eAAgB,uCAGnBW,KAAKT,GACLU,MAAMT,IARI,yC,qEAaFU,EAAKb,G,2FACf,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMQ,IAAN,iCAAoCD,GAAO,CAC7CH,QAAS,CACL,cAAgB,SAAhB,OAA0BV,GAC1B,eAAgB,uCAGnBW,KAAKT,GACLU,MAAMT,IARI,yC,sEAYDH,G,2FACX,IAAIC,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMQ,IAAI,kBAAmB,CAC/BJ,QAAS,CACL,cAAgB,SAAhB,OAA0BV,GAC1B,eAAgB,uCAGnBW,KAAKT,GACLU,MAAMT,IARI,yC,wEAaCU,EAAKE,G,2FAClB,IAAId,SAAQ,SAAOC,EAASC,GAAhB,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACTE,IAAMU,IAAN,gCAAmCH,GAAOE,GAC3CJ,KAAKT,GACLU,MAAMT,IAHI,yC,8CCtEnBc,EAAaC,IAAbD,SAEO,aAAO,IAAD,EACOA,EAAS,CAC7BnB,MAAO,GACPC,SAAU,KAHG,mBACVoB,EADU,KACJC,EADI,KAMXC,EAAe,WAAO,IAChBvB,EAAqBqB,EAArBrB,MAAQC,EAAaoB,EAAbpB,SAChB,MAAQ,gDAAgDuB,KAAKxB,IAAWC,EAASwB,OAAS,GAW9F,OACI,8BACI,yBAAKC,UAAU,cACX,2BAAOA,UAAU,sBAAjB,gBACA,2BACIC,KAAK,QACLD,UAAU,eACVE,MAAOP,EAAKrB,MACZ6B,UAAU,IACVC,SAAU,SAAAC,GACNT,EAAQ,CAAEtB,MAAO+B,EAAMC,OAAOJ,MAAO3B,SAAUoB,EAAKpB,eAIhE,yBAAKyB,UAAU,cACX,2BAAOA,UAAU,sBAAjB,SACA,2BACIC,KAAK,WACLE,UAAU,IACVH,UAAU,eACVE,MAAOP,EAAKpB,SACZ6B,SAAU,SAAAC,GACNT,EAAQ,CAAEtB,MAAOqB,EAAKrB,MAAOC,SAAU8B,EAAMC,OAAOJ,YAIhE,kBAAC,IAAD,CACID,KAAK,UACLM,KAAK,QACLC,MAAM,QACNR,UAAU,oBACVS,QAvCQ,0BAAA7B,EAAAC,OAAA,mDACXgB,IADW,mEAAAjB,EAAA,MAEI8B,EAAKC,MAAMhB,IAFf,OAGI,MADdgB,EAFU,QAGNC,QACNC,aAAaC,QAAQ,UAAWH,EAAMI,KAAKC,OAJ/B,sCAwCRC,UAAWpB,KANf,a,iBC/CG,cAA6C,IAAlCqB,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMZ,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,IAAKZ,EAAS,EAATA,MAChD,OACE,oCACE,kBAAC,IAAD,CAAMa,GAAIF,GACR,kBAAC,IAAD,CAAQlB,KAAMmB,GAAO,UAAWb,KAAMA,EAAMC,MAAOA,GAAS,QAASc,KAAM,SACtEJ,MCLLK,EAASC,IAATD,KAEO,aACb,OACE,oCACE,kBAAC,EACK,CAAEL,MAAO,mBAAeC,KAAM,aAAcZ,KAAM,SAExD,6BACA,yBACEkB,MAAO,CACLC,QAAS,OACTC,SAAU,WACVC,SAAU,aAGX,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC5B,kBAAC,IAAD,CACEC,IAAKD,EACLE,WAAS,EACTR,MAAO,CACLS,KAAM,uBACNC,OAAQ,OAEVC,MACE,yBAAKC,IAAI,2FAGX,kBAACd,EAAD,CAAML,MAAM,oBACZ,6BACA,kBAAC,IAAD,CAASA,MAAM,kBACb,kBAAC,IAAD,CACEO,MAAO,CAAEa,MAAO,QAASC,WAAY,QACrCtC,KAAK,YACLO,MAAM,SACND,KAAK,aACLe,KAAM,QACNkB,KAAI,yBAAoBT,MAG5B,kBAAC,IAAD,CAASb,MAAM,SACb,kBAAC,IAAD,CACEO,MAAO,CAAEa,MAAO,SAChBrC,KAAK,UACLO,MAAM,SACND,KAAK,OACLe,KAAM,QACNkB,KAAI,sBAAiBT,a,kBC9CtB,aAQX,OACI,oCACI,kBAAC,EAAa,CAAEb,MAAO,wBAAyBC,KAAM,aAAcZ,KAAM,SAC1E,6BACA,kBAAC,IAAD,CACIkC,WAAW,aACXC,WAbC,CACT,CAAExB,MAAO,sBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,uBAUDyB,WAAY,SAAAb,GAAI,OACZ,kBAAC,IAAKc,KAAN,KACI,kBAAC,IAAKA,KAAKrB,KAAX,CACIsB,OACI,kBAAC,IAAD,CAAQR,IAAI,qEAEhBnB,MAAO,uBAAGsB,KAAK,sBAAsBV,EAAKZ,OAC1C4B,YAAY,gGCvBzB,aAQX,OACI,oCACI,kBAAC,EAAa,CAAE5B,MAAO,iBAAkBC,KAAM,YAAaZ,KAAM,SAClE,6BACA,kBAAC,IAAD,CACIkC,WAAW,aACXC,WAbC,CACT,CAAExB,MAAO,sBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,sBACT,CAAEA,MAAO,uBAUDyB,WAAY,SAAAb,GAAI,OACZ,kBAAC,IAAKc,KAAN,KACI,kBAAC,IAAKA,KAAKrB,KAAX,CACIsB,OACI,kBAAC,IAAD,CAAQR,IAAI,6FAEhBnB,MAAO,uBAAGsB,KAAK,sBAAsBV,EAAKZ,OAC1C4B,YAAY,gGCxBzB,aAEb,OACE,wC,6CCFW,cAA4D,IAAhDC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAY/B,EAAkB,EAAlBA,MAAOgC,EAAW,EAAXA,QAC3D,OACI,kBAAC,IAAD,CACIhC,MAAOA,EACPiC,QAASF,EACTG,KAAMF,GAAoBF,EAC1BK,SAAUL,EACVM,kBAAmB,CAAE7B,MAAO,CAAEC,QAAS,SACvC6B,MAAO,QACTR,ICPK,cAAqB,IAAT9C,EAAQ,EAARA,KAAQ,EACGR,oBAAS,GADZ,mBAC1B+D,EAD0B,KACnBC,EADmB,OAEGhE,mBAAS,MAFZ,mBAE1BiE,EAF0B,KAEdC,EAFc,OAGDlE,mBAAS,CAAEmE,IAAK,QAASC,IAAK,SAH7B,mBAG1BjC,EAH0B,KAGhBkC,EAHgB,OAITrE,mBAAS,IAJA,mBAI1BsE,EAJ0B,KAIpBC,EAJoB,OAKCvE,mBAAS,CACzCyB,MAAO,GACP+C,OAAQ,GACRnB,YAAa,KARkB,mBAK1BoB,EAL0B,KAKfC,EALe,KAW3BC,EAAuB,SAAC,GAAmC,IAAjCxC,EAAgC,EAAhCA,SAAgC,EAAtByC,QAAsB,EAAbC,OACjDR,EAAYlC,IAGR2C,EAAc,kBAAMd,GAAoBD,IAsF9C,OAAQA,EAuDN,kBAAC,EAAc,CACbtC,MA7DkB,CACpB,UAAa,qBACb,eAAkB,qBA2DKwC,GACrBX,QA5EoB,WACtB,OAAQW,GAEN,IAAK,iBACH,OAhBI,kBAAC,IAAD,CACNc,iBAAkB,yBAAK/C,MAAO,CAAEgD,OAAQ,UACxCC,WAAY,yBAAKjD,MAAO,CAAEgD,OAAQ,WAClCE,gBAAiB/C,EACjBxB,SAAUgE,IAcV,IAAK,YACH,OAxDF,8BACE,yBAAKpE,UAAU,cACb,2BAAO4E,QAAQ,qBAAqB5E,UAAU,sBAA9C,UACA,2BACEC,KAAK,OACLD,UAAU,eACVE,MAAOgE,EAAUhD,MACjBd,SAAU,SAAAC,GACR8D,EAAa,CAAEjD,MAAOb,EAAMC,OAAOJ,MAAO+D,OAAQC,EAAUD,OAAQnB,YAAaoB,EAAUpB,kBAIjG,yBAAK9C,UAAU,cACb,2BAAO4E,QAAQ,qBAAqB5E,UAAU,sBAA9C,iBACA,8BACEA,UAAU,eACVE,MAAOgE,EAAUD,OACjB7D,SAAU,SAAAC,GACR8D,EAAa,CAAEjD,MAAOgD,EAAUhD,MAAO+C,OAAQ5D,EAAMC,OAAOJ,MAAO4C,YAAaoB,EAAUpB,kBAIhG,yBAAK9C,UAAU,cACb,2BAAO4E,QAAQ,qBAAqB5E,UAAU,sBAA9C,QACA,8BACEA,UAAU,eACVE,MAAOgE,EAAUpB,YACjB1C,SAAU,SAAAC,GACR8D,EAAa,CAAEjD,MAAOgD,EAAUhD,MAAO+C,OAAQC,EAAUD,OAAQnB,YAAazC,EAAMC,OAAOJ,aA8BnG,QACE,MAAO,oCAkEA2E,GACT5B,WAAYO,EACZR,OAAQuB,EACRrB,QAhJa,WACf,GAAmB,cAAfQ,EAA4B,CAAC,IACzBxC,EAA+BgD,EAA/BhD,MAAO+C,EAAwBC,EAAxBD,OAAQnB,EAAgBoB,EAAhBpB,YAErBkB,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAE7C,QAAO4B,cAAamB,OAAQA,EAAOa,MAAM,UAC7DX,EAAa,CACXjD,MAAO,GACP+C,OAAQ,GACRnB,YAAa,KAGjBW,GAAmB,MA0EnB,kBAAC,IAAD,CAAMhC,MAAO,CAAEsD,SAAU,QACvB,kBAAC,IAAKnC,KAAN,KACE,kBAAC,IAAD,CACEnC,QAAS,WAAS8D,IAAmBZ,EAAc,mBACnDpD,KAAK,SACLC,MAAM,QACNwE,SAAS,SACThF,UAAU,qBALZ,mBASA,8BACG,IACD,kBAAC,IAAD,CAAMC,KAAK,cAAcwB,MAAO,CAAEwD,MAAO,UAF3C,8BAGW,2BAAIrD,EAASiC,KAHxB,4BAGqD,IACnD,2BAAIjC,EAASgC,MAEf,8BAEF,kBAAC,IAAKhB,KAAN,KACE,kBAAC,IAAD,CAAQrC,KAAK,OAAOC,MAAM,QAAQC,QAAS,WAAS8D,IAAmBZ,EAAc,eAArF,iBAGA,kBAAC,IAAD,CACElB,WAAW,aACXC,WAAYqB,EACZpB,WAAY,SAAAb,GAAI,OACd,kBAAC,IAAKc,KAAN,KACE,kBAAC,IAAKA,KAAKrB,KAAX,CACEsB,OACE,kBAAC,IAAD,CAAQR,IAAI,6FAEdnB,MAAOY,EAAKZ,MACZ4B,YAAahB,EAAKgB,kBAK1B,8BAEF,kBAAC,IAAKF,KAAN,KACE,kBAAC,IAAD,CACEnC,QAlEc,WACpByE,QAAQC,IAAIpB,EAAKnC,IAkEX3B,KAAK,UACLM,KAAK,cACLC,MAAM,QACNwE,SAAS,SACThF,UAAU,qBAED,QAARC,EAAiB,WAAa,Y,SCtC1BmF,UAAKC,OAAO,CAAEpG,KAAM,SAApBmG,EAlHf,YAA2C,IAAfzF,EAAc,EAAdA,KAAMM,EAAQ,EAARA,KAAQ,EACER,oBAAS,GADX,mBAC/B6F,EAD+B,KACjBC,EADiB,KAE9BC,EAAsB7F,EAAtB6F,kBAkCR,OACI,kBAAC,IAAD,CAAM/D,MAAO,CAAE8B,MAAO,MAAOwB,SAAU,SAAWU,SAjCjC,SAAAC,GACjBA,EAAEC,iBACFhG,EAAKiG,yBAAwB,SAAOC,EAAKC,GAAZ,qBAAAlH,EAAAC,OAAA,mDACpBgH,EADoB,uBAEfxH,EAA8ByH,EAA9BzH,SAAUC,EAAoBwH,EAApBxH,MAAOC,EAAauH,EAAbvH,SAFF,WAAAK,EAAA,MAGFmH,EAAIC,SAAS,CAAE3H,WAAUC,QAAOC,WAAUC,MAAOqC,aAAaoF,QAAQ,cAHpE,OAGjBC,EAHiB,OAIrBhB,QAAQC,IAAIe,GACZhB,QAAQC,IAAI,4BAA6BW,GALpB,0CAgCzB,kBAAC,IAAKlD,KAAN,CAAWuD,MAAM,iBACZX,EAAkB,WAAY,CAC3BY,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAJpBd,CAQG,kBAAC,IAAD,CACIe,OAAQ,kBAAC,IAAD,CAAMtG,KAAK,OAAOwB,MAAO,CAAEwD,MAAO,yBAItD,kBAAC,IAAKrC,KAAN,CAAWuD,MAAM,gBACZX,EAAkB,QAAS,CACxBY,MAAO,CACH,CACInG,KAAM,QACNqG,QAAS,4BAEb,CACID,UAAU,EACVC,QAAS,6CARpBd,CAYG,kBAAC,IAAD,CACIe,OAAQ,kBAAC,IAAD,CAAMtG,KAAK,OAAOwB,MAAO,CAAEwD,MAAO,yBAItD,kBAAC,IAAKrC,KAAN,CAAWuD,MAAM,QAAQK,aAAW,GAC/BhB,EAAkB,WAAY,CAC3BY,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,oCAEb,CACIG,UAjDO,SAACC,EAAMxG,EAAOyG,GACrCzG,GAASoF,GACT3F,EAAKiH,eAAe,CAAC,WAAY,CAAEC,OAAO,IAE9CF,QAsCSnB,CAWG,kBAAC,IAAMsB,SAAP,CACIP,OAAQ,kBAAC,IAAD,CAAMtG,KAAK,OAAOwB,MAAO,CAAEwD,MAAO,yBAItD,kBAAC,IAAKrC,KAAN,CAAWuD,MAAM,eAAeK,aAAW,GACtChB,EAAkB,UAAW,CAC1BY,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,2BAEb,CACIG,UA1EO,SAACC,EAAMxG,EAAOyG,GACrCzG,GAASA,IAAUP,EAAKoH,cAAc,YACtCJ,EAAS,iDAETA,QA+DKnB,CAWG,kBAAC,IAAMsB,SAAP,CACIP,OAAQ,kBAAC,IAAD,CAAMtG,KAAK,OAAOwB,MAAO,CAAEwD,MAAO,qBAC1C+B,OArFM,SAAAtB,GAAM,IACpBxF,EAAUwF,EAAEpF,OAAZJ,MACRqF,EAAgBD,KAAkBpF,QAuF9B,kBAAC,IAAK0C,KAAN,KACI,kBAAC,IAAD,CAAQ3C,KAAK,UAAUO,MAAM,QAAQD,KAAK,OAAOyE,SAAS,UAC7C,QAAR/E,EAAiB,WAAa,cC5G3CgH,EAAaC,IAAbD,SA0DO7B,UAAKC,OAAO,CAAEpG,KAAM,QAApBmG,EAxDf,YAAmC,IAAfzF,EAAc,EAAdA,KAAMM,EAAQ,EAARA,KAChBuF,EAAsB7F,EAAtB6F,kBAWR,OACE,kBAAC,IAAD,CAAM/D,MAAO,CAAE8B,MAAO,MAAOwB,SAAU,SAAWU,SAV/B,SAAAC,GACnBA,EAAEC,iBACFhG,EAAKiG,yBAAwB,SAACC,EAAKC,GAC5BD,GACHX,QAAQC,IAAI,4BAA6BW,QAO3C,kBAAC,IAAKlD,KAAN,CAAWuD,MAAM,SAASK,aAAW,GAClChB,EAAkB,QAAS,CAC1BY,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BAJdd,CAQC,kBAAC,IAAD,CACEe,OAAQ,kBAAC,IAAD,CAAMtG,KAAK,YAAYwB,MAAO,CAAEwD,MAAO,yBAIrD,kBAAC,IAAKrC,KAAN,CAAWuD,MAAM,OAAOK,aAAW,GAClChB,EAAkB,cAAe,CAC9BY,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,2BAJhBd,CAQK,kBAACyB,EAAD,CAAUE,KAAM,MAItB,kBAAC,IAAKvE,KAAN,KACE,kBAAC,IAAD,CACE3C,KAAK,UACLM,KAAK,OACLC,MAAM,QACNwE,SAAS,SACThF,UAAU,qBAED,QAARC,EAAiB,WAAa,cClD1B,aACb,OACE,oCACI,yDCWR,SAASmH,EAAYC,EAAWC,GACzBzG,aAAaoF,QAAQ,YACxBqB,EAAa,CAAEC,aAAcF,EAAUG,SAASC,UAAY,UAGjD,iBACb,IAAMC,EAAK,CAET,CAAEC,KAAM,SAAUC,UAAW,kBAACC,EAAD,MAAWC,cAAc,GAGtD,CAAEH,KAAM,UAAWC,UAAW,kBAACG,EAAD,MAAYD,cAAc,GACxD,CAAEH,KAAM,UAAWC,UAAW,kBAACI,EAAD,MAAYF,cAAc,GACxD,CAAEH,KAAM,iBAAkBC,UAAW,kBAACK,EAAD,MAAmBH,cAAc,GACtE,CAAEH,KAAM,SAAUC,UAAW,kBAACM,EAAD,MAAWJ,cAAc,GAGtD,CAAEH,KAAM,aAAcC,UAAW,kBAAC,EAAW,CAAE3H,KAAM,QAAa6H,cAAc,GAChF,CAAEH,KAAM,aAAcC,UAAW,kBAAC,EAAW,CAAE3H,KAAM,QAAa6H,cAAc,GAChF,CAAEH,KAAM,YAAaC,UAAW,kBAAC,EAAU,CAAE3H,KAAM,QAAa6H,cAAc,GAC9E,CAAEH,KAAM,kBAAmBC,UAAW,kBAAC,EAAW,CAAE3H,KAAM,SAAc6H,cAAc,GACtF,CAAEH,KAAM,kBAAmBC,UAAW,kBAAC,EAAW,CAAE3H,KAAM,SAAc6H,cAAc,GACtF,CAAEH,KAAM,iBAAkBC,UAAW,kBAAC,EAAU,CAAE3H,KAAM,SAAc6H,cAAc,GAGpF,CAAEH,KAAM,qBAAsBC,UAAW,kBAAC,EAAD,MAAYE,cAAc,IAGrE,OACE,kBAAC,IAAD,KACGJ,EAAG7F,KAAI,gBAAG8F,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWE,EAApB,EAAoBA,aAApB,OACN,kBAAC,IAAD,CAAO9F,IAAK2F,EAAMA,KAAMA,EAAMQ,SAASL,GAAeV,GACnDQ,Q,oCC9CI,aACb,OACE,oCACE,yBAAKnG,MAAO,CAAE2G,QAAS,KACrB,yBACE3G,MAAO,CACL8B,MAAO,OACP8E,aAAc,IAEhBhG,IAAKiG,MAEP,yBACE7G,MAAO,CACL8B,MAAO,OACP6E,QAAS,GACTG,cAAe,GAEjBlG,IAAKmG,OAGT,+B,SCjBS,eAAiC,IAAtBtH,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMZ,EAAQ,EAARA,KACnC,OACI,oCACI,kBAAC,IAAD,CAAMc,GAAIF,IACV,kBAAC,IAAD,CAAMlB,KAAMM,IACZ,8BAAOW,KCPJ,cACb,OACE,kBAAC,IAAD,CAAMuH,MAAM,OAAOhH,MAAO,CAAEiH,WAAY,QAAUC,KAAK,UACrD,kBAAC,IAAK/F,KAAN,CAAWZ,IAAI,WACb,kBAAC,GACK,CAAEb,KAAM,UAAWD,MAAO,aAASX,KAAM,iBAGjD,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,WACb,kBAAC,GACK,CAAEb,KAAM,UAAWD,MAAO,kBAAmBX,KAAM,UAG3D,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,kBACb,kBAAC,GACK,CACFb,KAAM,iBACND,MAAO,gBACPX,KAAM,iBAIZ,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,UACb,kBAAC,GAAa,CAAEb,KAAM,SAAUD,MAAO,WAAYX,KAAM,aAE3D,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,UACb,kBAAC,GAAa,CAAEb,KAAM,SAAUD,MAAO,SAAUX,KAAM,cC1BhD,cACb,OACE,kBAAC,IAAD,CAAMkI,MAAM,OAAOhH,MAAO,CAAEiH,WAAY,QAAUC,KAAK,UACrD,kBAAC,IAAK/F,KAAN,CAAWZ,IAAI,WACb,kBAAC,GACK,CAAEb,KAAM,UAAWD,MAAO,aAASX,KAAM,iBAGjD,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,kBACb,kBAAC,GACK,CACFb,KAAM,iBACND,MAAO,gBACPX,KAAM,iBAIZ,kBAAC,IAAKqC,KAAN,CAAWZ,IAAI,UACb,kBAAC,GAAa,CAAEb,KAAM,SAAUD,MAAO,UAAWX,KAAM,aCVxDqI,GAAmCC,IAAnCD,OAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,OAAQC,GAAUH,IAAVG,MACzBC,GAAUC,IAAVD,MCFYE,QACW,cAA7BC,OAAO5B,SAAS6B,UAEe,UAA7BD,OAAO5B,SAAS6B,UAEhBD,OAAO5B,SAAS6B,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBFUD,WAAY,IAAD,EACU/J,oBAAS,GADnB,mBACjBgK,EADiB,KACNC,EADM,OAEEjK,mBAASoB,aAAaoF,QAAQ,iBAAc0D,GAF9C,mBAEjBC,EAFiB,UAIxB,OACE,kBAAC,IAAD,CAAQnI,MAAO,CAAEoI,UAAW,UAC1B,kBAAC,IAAD,KACE,kBAACb,GAAD,CACEvH,MAAO,CAAEiH,WAAY,QACrBnF,MAAO,MACPuG,aAAW,EACXL,UAAWA,EACXM,WAAYL,IAEVD,GAAa,kBAAC,EAAD,MACdG,EAAS,kBAAC,GAAD,MAAgB,kBAAC,GAAD,OAE5B,kBAAC,IAAD,KACE,kBAAChB,GAAD,CACEnH,MAAO,CACLiH,WAAY,UACZN,QAAS,GACT4B,WAAY,kBACZC,UAAW,wBAGb,kBAAChB,GAAD,CAAOxH,MAAO,CAAEwD,MAAO,SACrB,kBAAC,IAAD,CAAMhF,KAAK,cADb,yBAIF,kBAAC6I,GAAD,CAASrH,MAAO,CAAEU,OAAQ,WACxB,kBAAC,IAAD,CAAYV,MAAO,CAAEU,OAAQ,YAC7B,yBACE+H,GAAG,YACHzI,MAAO,CAAE2G,QAAS,GAAIM,WAAY,OAAQmB,UAAW,SAErD,kBAAC,EAAD,QAGJ,kBAACd,GAAD,CAAQtH,MAAO,CAAE0I,UAAW,WAA5B,sDEjDM,MAAkBC,SAASC,eAAe,SD6HpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrL,MAAK,SAAAsL,GACjCA,EAAaC,kB","file":"static/js/main.27b158b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scvlogo.001b21b6.png\";","module.exports = __webpack_public_path__ + \"static/media/koislogo.e5789706.png\";","import axios from 'axios';\r\n\r\nexport default class {\r\n    static async register({ fullname, email, password, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post('/api/auth/user', {\r\n                params: {\r\n                    name: fullname,\r\n                    email: email,\r\n                    password: password\r\n                },\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async login({ email, password }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`/api/auth/login`, {\r\n                email: email,\r\n                password: password\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async delUser(_id, _AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`/api/auth/delete-user/${_id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n\r\n    }\r\n\r\n    static async getUser(_id, _AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`/api/auth/user-profile/${_id}`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async getUsers(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get('/api/auth/users', {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n\r\n    }\r\n\r\n    static async updateUser(_id, _params) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.put(`/api/auth/update-user/${_id}`, _params)\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\n\r\nconst { useState } = React;\r\n\r\nexport default () => {\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { email , password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) && password.length > 4;\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        if (!validateForm()) return;\r\n        const login = await _api.login(form);\r\n        if (login.status == 200) {\r\n            localStorage.setItem('_kToken', login.data.token);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ email: event.target.value, password: form.password })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ email: form.email, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleLogin}\r\n                disabled={!validateForm()}\r\n            >Prijava\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function({ title, link, icon, css, shape }) {\r\n  return (\r\n    <>\r\n      <Link to={link}>\r\n        <Button type={css || 'primary'} icon={icon} shape={shape || 'round'} size={\"large\"} >\r\n            {title}\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Button, Tooltip } from \"antd\";\r\nimport KoisLink from \"./../common/buttonlink\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <KoisLink\r\n        {...{ title: \"Dodaj točko\", link: \"/new/point\", icon: \"plus\" }}\r\n      />\r\n      <hr />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexFlow: \"row wrap\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        {[1, 2, 3, 4, 5, 6, 7, 8].map((item, index) => (\r\n          <Card\r\n            key={index}\r\n            hoverable\r\n            style={{\r\n              flex: \"0 1 calc(25% - 16px)\",\r\n              margin: \"8px\",\r\n            }}\r\n            cover={\r\n              <img src=\"https://geospatialmedia.s3.amazonaws.com/wp-content/uploads/2018/11/location-tech.jpg\" />\r\n            }\r\n          >\r\n            <Meta title=\"Random location\" />\r\n            <hr />\r\n            <Tooltip title=\"Podroben ogled\">\r\n              <Button\r\n                style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                type=\"secondary\"\r\n                shape=\"circle\"\r\n                icon=\"fullscreen\"\r\n                size={\"large\"}\r\n                href={`/details/point/${index}`}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Uredi\">\r\n              <Button\r\n                style={{ float: \"right\" }}\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size={\"large\"}\r\n                href={`/edit/point/${index}`}\r\n              />\r\n            </Tooltip>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { List, Avatar, Button } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nexport default function () {\r\n    const data = [\r\n        { title: \"Ant Design Title 1\" },\r\n        { title: \"Ant Design Title 2\" },\r\n        { title: \"Ant Design Title 3\" },\r\n        { title: \"Ant Design Title 4\" }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <KoisLink {...{ title: \"Dodaj administratorja\", link: '/new/admin', icon: 'plus' }} />\r\n            <hr />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                            }\r\n                            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { List, Avatar, Button } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\n\r\nexport default function () {\r\n    const data = [\r\n        { title: \"Ant Design Title 1\" },\r\n        { title: \"Ant Design Title 2\" },\r\n        { title: \"Ant Design Title 3\" },\r\n        { title: \"Ant Design Title 4\" }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <KoisLink {...{ title: \"Dodaj zahtevek\", link: '/new/task', icon: 'plus' }} />\r\n            <hr />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://cdn0.iconfinder.com/data/icons/education-gamification/1000/Task_Complete-512.png\" />\r\n                            }\r\n                            title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                            description=\"Ant Design, a design language for background applications, is refined by Ant UED Team\"\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function() {\r\n\r\n  return (\r\n    <div>\r\n        serbus\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nexport default function ({ content, toggle, visibility, title, confirm }) {\r\n    return (\r\n        <Modal\r\n            title={title}\r\n            visible={visibility}\r\n            onOk={confirm ? confirm : toggle}\r\n            onCancel={toggle}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            width={\"50vw\"}\r\n        >{content}</Modal>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Modal, List, Avatar } from \"antd\";\r\nimport LocationPicker from \"react-location-picker\";\r\nimport KoisModal from './../common/modal';\r\n\r\nexport default function ({ type }) {\r\n  const [modal, setModalVisibility] = useState(false);\r\n  const [modalIndex, setModalIndex] = useState(null);\r\n  const [position, setPosition] = useState({ lat: 46.4441, lng: 15.197 });\r\n  const [tabs, setTabs] = useState([]);\r\n  const [pointForm, setPointForm] = useState({\r\n    title: '',\r\n    images: '',\r\n    description: ''\r\n  });\r\n\r\n  const handleLocationChange = ({ position, address, places }) => {\r\n    setPosition(position);\r\n  };\r\n\r\n  const toggleModal = () => setModalVisibility(!modal);\r\n\r\n  const hanldeOK = () => {\r\n    if (modalIndex === 'pointForm') {\r\n      let { title, images, description } = pointForm;\r\n      debugger;\r\n      setTabs([...tabs, { title, description, images: images.split('\\n')}]);\r\n      setPointForm({\r\n        title: '',\r\n        images: '',\r\n        description: ''\r\n      });\r\n    }\r\n    setModalVisibility(false);\r\n  };\r\n\r\n  const getPointFormModal = () => {\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"bmd-label-floating\">Naslov</label>\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            value={pointForm.title} \r\n            onChange={event => {\r\n              setPointForm({ title: event.target.value, images: pointForm.images, description: pointForm.description })\r\n            }} \r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"bmd-label-floating\">Povezave slik</label>\r\n          <textarea \r\n            className=\"form-control\" \r\n            value={pointForm.images} \r\n            onChange={event => {\r\n              setPointForm({ title: pointForm.title, images: event.target.value, description: pointForm.description })\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"bmd-label-floating\">Opis</label>\r\n          <textarea \r\n            className=\"form-control\" \r\n            value={pointForm.description} \r\n            onChange={event => {\r\n              setPointForm({ title: pointForm.title, images: pointForm.images, description: event.target.value })\r\n            }}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const getLocationFormModal = () => {\r\n    return (<LocationPicker\r\n      containerElement={<div style={{ height: \"100%\" }} />}\r\n      mapElement={<div style={{ height: \"400px\" }} />}\r\n      defaultPosition={position}\r\n      onChange={handleLocationChange}\r\n    />);\r\n  }\r\n\r\n  const primarySubmit = () => {\r\n    console.log(tabs,position);\r\n  }\r\n\r\n  const getModalContent = () => {\r\n    switch (modalIndex) {\r\n\r\n      case 'locationPicker':\r\n        return getLocationFormModal();\r\n\r\n      case 'pointForm':\r\n        return getPointFormModal();\r\n\r\n      default: \r\n        return '<p>Prišlo je do napake!</p>'\r\n    }\r\n  }\r\n\r\n  const getModalTitle = {\r\n    'pointForm': 'Obrazec točke',\r\n    'locationPicker': 'Izbirnik lokacije'\r\n  }\r\n\r\n  return !modal ? (\r\n    <Form style={{ minWidth: \"50%\" }}>\r\n      <Form.Item>\r\n        <Button\r\n          onClick={() =>  { toggleModal(true); setModalIndex('locationPicker'); }}\r\n          icon=\"select\"\r\n          shape=\"round\"\r\n          htmlType=\"button\"\r\n          className=\"login-form-button\"\r\n        >\r\n          Izberi lokacijo\r\n        </Button>\r\n        <span>\r\n          {\" \"}\r\n          <Icon type=\"environment\" style={{ color: \"#66c\" }} /> zemljepisna\r\n          dolžina: <b>{position.lng}</b> zemljepisna širina:{\" \"}\r\n          <b>{position.lat}</b>\r\n        </span>\r\n        <hr />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button icon=\"plus\" shape=\"round\" onClick={() =>  { toggleModal(true); setModalIndex('pointForm'); }}>\r\n          Dodaj zavihek\r\n        </Button>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={tabs}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://cdn0.iconfinder.com/data/icons/education-gamification/1000/Task_Complete-512.png\" />\r\n                }\r\n                title={item.title}\r\n                description={item.description}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <hr />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          onClick={primarySubmit}\r\n          type=\"primary\"\r\n          icon=\"environment\"\r\n          shape=\"round\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  ) : (\r\n    <KoisModal {...{\r\n      title: getModalTitle[modalIndex],\r\n      content: getModalContent(modalIndex),\r\n      visibility: modal, \r\n      toggle: toggleModal,\r\n      confirm: hanldeOK\r\n    }} />\r\n  );\r\n}\r\n","import { Form, Input, Icon, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport API from './../common/apimethods';\r\n\r\nfunction RegistrationForm({ form, type }) {\r\n    const [confirmDirty, setConfirmDirty] = useState(false);\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        form.validateFieldsAndScroll(async (err, values) => {\r\n            if (!err) {\r\n                let { fullname, email, password } = values;\r\n                let result = await API.register({ fullname, email, password, _AUTH: localStorage.getItem('_kToken') });\r\n                console.log(result);\r\n                console.log(\"Received values of form: \", values);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        setConfirmDirty(confirmDirty || !!value);\r\n    };\r\n\r\n    const compareToFirstPassword = (rule, value, callback) => {\r\n        if (value && value !== form.getFieldValue(\"password\")) {\r\n            callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    const validateToNextPassword = (rule, value, callback) => {\r\n        if (value && confirmDirty) {\r\n            form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    return (\r\n        <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n            <Form.Item label=\"ime & priimek\">\r\n                {getFieldDecorator(\"fullname\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vaše ime & priimek!\"\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"e-pošta\">\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                        {\r\n                            type: \"email\",\r\n                            message: \"Neveljavna e-pošta!\"\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vašo e-pošto!\"\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                        prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"geslo\" hasFeedback>\r\n                {getFieldDecorator(\"password\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo vnesite vaše geslo!\"\r\n                        },\r\n                        {\r\n                            validator: validateToNextPassword\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"potrdi geslo\" hasFeedback>\r\n                {getFieldDecorator(\"confirm\", {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: \"Prosimo ponovite geslo!\"\r\n                        },\r\n                        {\r\n                            validator: compareToFirstPassword\r\n                        }\r\n                    ]\r\n                })(\r\n                    <Input.Password\r\n                        prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                        onBlur={handleConfirmBlur}\r\n                    />\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" shape=\"round\" icon=\"user\" htmlType=\"submit\">\r\n                    {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Form.create({ name: \"admin\" })(RegistrationForm);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction TaskForm({ form, type }) {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n      <Form.Item label=\"naslov\" hasFeedback>\r\n        {getFieldDecorator(\"title\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite naslov!\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"file-text\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"opis\" hasFeedback>\r\n      {getFieldDecorator(\"description\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite opis!\"\r\n            }\r\n          ]\r\n        })(\r\n            <TextArea rows={4} />\r\n        )}\r\n        \r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          icon=\"file\"\r\n          shape=\"round\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create({ name: \"task\" })(TaskForm);\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n        <div>indepth view for point</div>\r\n    </>\r\n  );\r\n}\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n//rotes import\r\nimport Login from \"./../containers/Login\";\r\nimport Points from \"./../containers/Points\";\r\nimport Admins from \"./../containers/Admins\";\r\nimport Tasks from \"./../containers/Tasks\";\r\nimport Documentation from \"./../containers/Documentation\";\r\n\r\n//import forms\r\nimport FPoint from \"./../forms/fPoint\";\r\nimport FAdmin from \"./../forms/fAdmin\";\r\nimport FTask from \"./../forms/fTask\";\r\n\r\n//import detail views\r\nimport DPoint from \"./../detailed/dpoint\";\r\n\r\nfunction requireAuth(nextState, replaceState) {\r\n  if (!localStorage.getItem(\"_kToken\"))\r\n    replaceState({ nextPathname: nextState.location.pathname }, \"/login\");\r\n}\r\n\r\nexport default function() {\r\n  const _R = [\r\n    // auth route\r\n    { path: \"/login\", component: <Login />, authRequired: false },\r\n\r\n    // common routes\r\n    { path: \"/points\", component: <Points />, authRequired: true },\r\n    { path: \"/admins\", component: <Admins />, authRequired: true },\r\n    { path: \"/documentation\", component: <Documentation />, authRequired: false },\r\n    { path: \"/tasks\", component: <Tasks />, authRequired: true },\r\n\r\n    // form routes\r\n    { path: \"/new/point\", component: <FPoint {...{ type: \"new\" }} />, authRequired: true },\r\n    { path: \"/new/admin\", component: <FAdmin {...{ type: \"new\" }} />, authRequired: true },\r\n    { path: \"/new/task\", component: <FTask {...{ type: \"new\" }} />, authRequired: true },\r\n    { path: \"/edit/point/:id\", component: <FPoint {...{ type: \"edit\" }} />, authRequired: true },\r\n    { path: \"/edit/admin/:id\", component: <FAdmin {...{ type: \"edit\" }} />, authRequired: true },\r\n    { path: \"/edit/task/:id\", component: <FTask {...{ type: \"edit\" }} />, authRequired: true },\r\n\r\n    // detailed view routes\r\n    { path: \"/details/point/:id\", component: <DPoint />, authRequired: true }\r\n  ];\r\n\r\n  return (\r\n    <Switch>\r\n      {_R.map(({ path, component, authRequired }) => (\r\n        <Route key={path} path={path} onEnter={authRequired ? requireAuth : true}>\r\n          {component}\r\n        </Route>\r\n      ))}\r\n    </Switch>\r\n  );\r\n}\r\n","import KoisLogo from \"./../images/scvlogo.png\";\r\nimport ScvLogo from \"./../images/koislogo.png\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <div style={{ padding: 20 }}>\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            marginBottom: 15\r\n          }}\r\n          src={KoisLogo}\r\n        />\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 15,\r\n            paddingBottom: 0\r\n          }}\r\n          src={ScvLogo}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon } from \"antd\";\r\nimport React from 'react';\r\n\r\n// ONLY USED IN app.js !!!!!\r\n// otherwise we use buttonlink.js\r\n\r\nexport default function({ title, link, icon }) {\r\n    return (\r\n        <>\r\n            <Link to={link} />\r\n            <Icon type={icon} />\r\n            <span>{title}</span>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/admins\">\r\n        <KoisLink\r\n          {...{ link: \"/admins\", title: \"Administratorji\", icon: \"user\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/tasks\">\r\n        <KoisLink {...{ link: \"/tasks\", title: \"Zahtevki\", icon: \"pushpin\" }} />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Odjava\", icon: \"logout\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Prijava\", icon: \"login\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from \"antd\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport KoisRouter from \"./common/router\";\r\nimport KoisLogos from \"./common/logos\";\r\n\r\n//import navigation\r\nimport IsAuthNav from \"./navs/isauth\";\r\nimport NonAuthNav from \"./navs/nonauth\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default function() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isAuth, setAuth] = useState(localStorage.getItem(\"_kToken\") || undefined);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Router>\r\n        <Sider\r\n          style={{ background: \"#345\" }}\r\n          width={\"300\"}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={setCollapsed}\r\n        >\r\n          {!collapsed && <KoisLogos />}\r\n          {isAuth ? <IsAuthNav /> : <NonAuthNav/>}\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              background: \"#002140\",\r\n              padding: 10,\r\n              borderLeft: \"1px solid white\",\r\n              boxShadow: \"0 4px 2px -2px gray\"\r\n            }}\r\n          >\r\n            <Title style={{ color: \"#fff\" }}>\r\n              <Icon type=\"dashboard\" /> Kois Administracija\r\n            </Title>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n            <div\r\n              id=\"container\"\r\n              style={{ padding: 24, background: \"#fff\", minHeight: \"40vh\" }}\r\n            >\r\n              <KoisRouter />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Samo Pritrznik & Janez Sedeljsak 2019/20 ©\r\n          </Footer>\r\n        </Layout>\r\n      </Router>\r\n    </Layout>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}