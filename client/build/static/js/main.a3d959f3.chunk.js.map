{"version":3,"sources":["images/scvlogo.png","images/koislogo.png","history.js","common/routewrapper.js","common/apimethods.js","containers/Login.js","common/buttonlink.js","containers/Points.js","containers/Admins.js","common/modal.js","forms/fPoint.js","forms/fAdmin.js","forms/fTask.js","detailed/dpoint.js","common/router.js","common/logos.js","common/link.js","navs/isauth.js","navs/nonauth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","RouteWrapper","Component","component","isPrivate","rest","signed","localStorage","getItem","to","defaultProps","name","email","password","_AUTH","Promise","resolve","reject","a","async","axios","post","params","headers","then","catch","get","_id","_params","put","data","point","useEffect","React","useState","props","useHistory","form","setForm","removeItem","validateForm","test","length","className","for","id","type","value","minLength","onChange","event","target","icon","shape","onClick","_api","login","status","Swal","fire","title","push","window","location","reload","setItem","token","disabled","link","css","size","Meta","Card","points","setPoints","getPoints","response","console","log","style","display","flexFlow","position","map","index","tabs","key","hoverable","flex","margin","cover","src","images","float","marginLeft","href","admins","setAdmins","getUsers","getAdmins","itemLayout","dataSource","renderItem","item","Item","avatar","description","content","toggle","visibility","confirm","visible","onOk","onCancel","cancelButtonProps","width","modal","setModalVisibility","modalIndex","setModalIndex","lat","lng","setPosition","setTabs","pointForm","setPointForm","handleLocationChange","address","places","toggleModal","imageValidation","http","XMLHttpRequest","open","send","containerElement","height","mapElement","defaultPosition","getModalContent","filteredImages","split","filter","text","confirmButtonText","minWidth","htmlType","color","lon","createPoint","register","TextArea","Input","Form","create","getFieldDecorator","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","label","hasFeedback","rules","required","message","prefix","rows","_R","path","Login","authRequired","Points","Admins","padding","marginBottom","KoisLogo","paddingBottom","ScvLogo","theme","background","mode","Header","Layout","Content","Footer","Sider","Title","Typography","Boolean","hostname","match","ReactDOM","render","collapsed","setCollapsed","undefined","isAuth","KoisHistory","minHeight","collapsible","onCollapse","borderLeft","boxShadow","textAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3d959f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scvlogo.001b21b6.png\";","module.exports = __webpack_public_path__ + \"static/media/koislogo.e5789706.png\";","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function RouteWrapper({\r\n    component: Component,\r\n    isPrivate,\r\n    ...rest\r\n}) {\r\n    const signed = localStorage.getItem('_kToken');\r\n    return (isPrivate && !signed) ? <Redirect to=\"/login\" /> : <Route {...rest} component={Component} />\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n    isPrivate: PropTypes.bool,\r\n    component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n    isPrivate: false\r\n};\r\n","import axios from 'axios';\r\n\r\n// if development mode use another separate server for api\r\nconst _API_ = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') ? 'localhost:5000' : '';\r\n\r\nexport default class {\r\n    static async register({ name, email, password, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/user`, {\r\n                params: {\r\n                    name: name,\r\n                    email: email,\r\n                    password: password\r\n                },\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async login({ email, password }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/auth/login`, {\r\n                email: email,\r\n                password: password\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n    static async getUsers(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/auth/user`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n\r\n    }\r\n\r\n    static async updateUser(_id, _params) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.put(`${_API_}/api/auth/user/${_id}`, _params)\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n\r\n    static async createPoint({ data, _AUTH }) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.post(`${_API_}/api/common/point`, {\r\n                params: {\r\n                    point: data\r\n                },\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n    }\r\n\r\n\r\n    static async getPoints(_AUTH) {\r\n        return new Promise(async (resolve, reject) => {\r\n            await axios.get(`${_API_}/api/common/point`, {\r\n                headers: {\r\n                    'Authorization': `Token ${_AUTH}`,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            })\r\n                .then(resolve)\r\n                .catch(reject);\r\n        });\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { useEffect, useState } = React;\r\n\r\nexport default (props) => {\r\n    const history = useHistory();\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const useMountEffect = (fun) => useEffect(fun, []);\r\n    useMountEffect(() => {\r\n        localStorage.removeItem('_kToken');\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { email , password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) && password.length > 4;\r\n    };\r\n\r\n    const handleLogin = async () => {\r\n        if (!validateForm()) return;\r\n        const login = await _api.login(form);\r\n        if (login.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Prijava je bila uspešna!'\r\n            }).then(() => {\r\n                history.push(\"/\");\r\n                window.location.reload();\r\n            });\r\n            localStorage.setItem('_kToken', login.data.token);\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Prijava ni bila uspešna!'\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ email: event.target.value, password: form.password })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ email: form.email, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleLogin}\r\n                disabled={!validateForm()}\r\n            >Prijava\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function({ title, link, icon, css, shape }) {\r\n  return (\r\n    <>\r\n      <Link to={link}>\r\n        <Button type={css || 'primary'} icon={icon} shape={shape || 'round'} size={\"large\"} >\r\n            {title}\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect  } from \"react\";\r\nimport { Card, Button, Tooltip } from \"antd\";\r\nimport KoisLink from \"./../common/buttonlink\";\r\nimport _api from \"./../common/apimethods\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function() {\r\n  const [points, setPoints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPoints();\r\n  }, []);\r\n\r\n  async function getPoints() {\r\n    const token = localStorage.getItem(\"_kToken\");\r\n    const response = await _api.getPoints(token);\r\n    if (response.status == 200) {\r\n      setPoints(response.data);\r\n      console.log(response.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <KoisLink\r\n        {...{ title: \"Dodaj točko\", link: \"/new/point\", icon: \"plus\" }}\r\n      />\r\n      <hr />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexFlow: \"row wrap\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        {points.map(({ tabs, _id }, index) => (\r\n          <Card\r\n            key={index}\r\n            hoverable\r\n            style={{\r\n              flex: \"0 1 calc(25% - 16px)\",\r\n              margin: \"8px\"\r\n            }}\r\n            cover={\r\n              <img src={tabs[0].images[0]} />\r\n            }\r\n          >\r\n            <Meta title={tabs[0].title} />\r\n            <hr />\r\n            <Tooltip title=\"Podroben ogled\">\r\n              <Button\r\n                style={{ float: \"right\", marginLeft: \"10px\" }}\r\n                type=\"secondary\"\r\n                shape=\"circle\"\r\n                icon=\"fullscreen\"\r\n                size={\"large\"}\r\n                href={`/details/point/${_id}`}\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title=\"Uredi\">\r\n              <Button\r\n                style={{ float: \"right\" }}\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size={\"large\"}\r\n                href={`/edit/point/${_id}`}\r\n              />\r\n            </Tooltip>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { List, Avatar, Button } from \"antd\";\r\nimport KoisLink from './../common/buttonlink';\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport _api from './../common/apimethods';\r\n\r\nexport default function () {\r\n    const [admins, setAdmins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAdmins();\r\n    }, []);\r\n\r\n    async function getAdmins() {\r\n        const token = localStorage.getItem('_kToken');\r\n        const response = await _api.getUsers(token);\r\n        if (response.status == 200) {\r\n            setAdmins(response.data);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <KoisLink {...{ title: \"Dodaj administratorja\", link: '/new/admin', icon: 'plus' }} />\r\n            <hr />\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={admins}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={\r\n                                <Avatar src=\"https://lh3.googleusercontent.com/proxy/Y1shLbYDADF-w5XLx4JUqfs-kOPuRgtP3nLwpYM0wP8NUQttSWMabqiRniN_0FTFeMu69iJbmlI4w54pRBmg6Z8mg4xEw0MB-bbJOBn-aiEUl4XAtKEh5DRPx20f\" />\r\n                            }\r\n                            title={item.name}\r\n                            description={item.email}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nexport default function ({ content, toggle, visibility, title, confirm }) {\r\n    return (\r\n        <Modal\r\n            title={title}\r\n            visible={visibility}\r\n            onOk={confirm ? confirm : toggle}\r\n            onCancel={toggle}\r\n            cancelButtonProps={{ style: { display: 'none' } }}\r\n            width={\"50vw\"}\r\n        >{content}</Modal>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox, Modal, List, Avatar } from \"antd\";\r\nimport LocationPicker from \"react-location-picker\";\r\nimport KoisModal from './../common/modal';\r\nimport Swal from 'sweetalert2';\r\nimport _api from './../common/apimethods';\r\n\r\nexport default function ({ type }) {\r\n    const [modal, setModalVisibility] = useState(false);\r\n    const [modalIndex, setModalIndex] = useState(null);\r\n    const [position, setPosition] = useState({ lat: 46.4441, lng: 15.197 });\r\n    const [tabs, setTabs] = useState([]);\r\n    const [pointForm, setPointForm] = useState({\r\n        title: '',\r\n        images: '',\r\n        description: ''\r\n    });\r\n\r\n    const handleLocationChange = ({ position, address, places }) => {\r\n        setPosition(position);\r\n    };\r\n\r\n    const toggleModal = () => setModalVisibility(!modal);\r\n\r\n    const hanldeOK = () => {\r\n        if (modalIndex === 'pointForm') {\r\n            let { title, images, description } = pointForm;\r\n            images = images.split('\\n');\r\n            let filteredImages = images.filter(imageValidation);\r\n            if(filteredImages.length !== images.length)  {\r\n                Swal.fire({\r\n                    title: 'Napaka!',\r\n                    text: 'Najdena je bila neveljavna povezava do slike!',\r\n                    icon: 'error',\r\n                    confirmButtonText: 'Nadaljuj'\r\n                });\r\n            } else {\r\n                setTabs([...tabs, { title, description, images: filteredImages }]);\r\n                setPointForm({\r\n                    title: '',\r\n                    images: '',\r\n                    description: ''\r\n                });\r\n                setModalVisibility(false)\r\n            }\r\n\r\n        } else setModalVisibility(false);\r\n    };\r\n\r\n    const getPointFormModal = () => {\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Naslov</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={pointForm.title}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, title: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Povezave slik</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.images}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, images: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\" className=\"bmd-label-floating\">Opis</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        value={pointForm.description}\r\n                        onChange={event => {\r\n                            setPointForm({ ...pointForm, description: event.target.value })\r\n                        }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const getLocationFormModal = () => {\r\n        return (<LocationPicker\r\n            containerElement={<div style={{ height: \"100%\" }} />}\r\n            mapElement={<div style={{ height: \"400px\" }} />}\r\n            defaultPosition={position}\r\n            onChange={handleLocationChange}\r\n        />);\r\n    }\r\n\r\n    const primarySubmit = async () => {\r\n        const _AUTH = localStorage.getItem('_kToken');\r\n        const data = {\r\n            location: { ...position, lon: position.lng },\r\n            tabs: tabs\r\n        };\r\n        const response = await _api.createPoint({ data, _AUTH})\r\n        if (response.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Točka je bila uspešno dodana!'\r\n            });\r\n            setTabs([]);\r\n        }\r\n    }\r\n\r\n    const getModalContent = () => {\r\n        switch (modalIndex) {\r\n\r\n            case 'locationPicker':\r\n                return getLocationFormModal();\r\n\r\n            case 'pointForm':\r\n                return getPointFormModal();\r\n\r\n            default:\r\n                return '<p>Prišlo je do napake!</p>'\r\n        }\r\n    }\r\n\r\n    const getModalTitle = {\r\n        'pointForm': 'Obrazec točke',\r\n        'locationPicker': 'Izbirnik lokacije'\r\n    }\r\n\r\n    const imageValidation = link => {\r\n        var http = new XMLHttpRequest();\r\n        http.open('HEAD', link, false);\r\n        http.send();\r\n        return http.status != 404;\r\n    }\r\n\r\n    return !modal ? (\r\n        <Form style={{ minWidth: \"50%\" }}>\r\n            <Form.Item>\r\n                <Button\r\n                    onClick={() => { toggleModal(true); setModalIndex('locationPicker'); }}\r\n                    icon=\"select\"\r\n                    shape=\"round\"\r\n                    htmlType=\"button\"\r\n                    className=\"login-form-button\"\r\n                >\r\n                    Izberi lokacijo\r\n                </Button>\r\n                <span>\r\n                    {\" \"}\r\n                    <Icon type=\"environment\" style={{ color: \"#66c\" }} /> zemljepisna dolžina:\r\n                    <b>{position.lng}</b> zemljepisna širina:{\" \"}\r\n                    <b>{position.lat}</b>\r\n                </span>\r\n                <hr />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button icon=\"plus\" shape=\"round\" onClick={() => { toggleModal(true); setModalIndex('pointForm'); }}>\r\n                    Dodaj zavihek\r\n        </Button>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={tabs}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                avatar={\r\n                                    <Avatar src={item.images[0]} />\r\n                                }\r\n                                title={item.title}\r\n                                description={item.description}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n                <hr />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button\r\n                    onClick={primarySubmit}\r\n                    type=\"primary\"\r\n                    icon=\"environment\"\r\n                    shape=\"round\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                >\r\n                    {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    ) : (\r\n            <KoisModal {...{\r\n                title: getModalTitle[modalIndex],\r\n                content: getModalContent(modalIndex),\r\n                visibility: modal,\r\n                toggle: toggleModal,\r\n                confirm: hanldeOK\r\n            }} />\r\n        );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from 'antd';\r\nimport _api from './../common/apimethods';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst { useState } = React;\r\n\r\nexport default () => {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const validateForm = () => {\r\n        const { name, email, password } = form;\r\n        return (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) \r\n            && password.length > 4\r\n            && name.length > 4;\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        if (!validateForm()) return;\r\n        const _AUTH = localStorage.getItem(\"_kToken\");\r\n        const register = await _api.register({...form, _AUTH });\r\n        if (register.status == 200) {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Uporabnik je bil uspešno dodan!'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label for=\"name\" className=\"bmd-label-floating\">Ime & Priimek</label>\r\n                <input \r\n                    id=\"name\"\r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    value={form.name} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, name: event.target.value  })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"email\" className=\"bmd-label-floating\">E-pošta</label>\r\n                <input \r\n                    id=\"email\"\r\n                    type=\"email\" \r\n                    className=\"form-control\" \r\n                    value={form.email} \r\n                    minLength=\"5\"\r\n                    onChange={event => {\r\n                        setForm({ ...form, email: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"password\" className=\"bmd-label-floating\">Geslo</label>\r\n                <input \r\n                    id=\"password\"\r\n                    type=\"password\" \r\n                    minLength=\"5\"\r\n                    className=\"form-control\" \r\n                    value={form.password} \r\n                    onChange={event => {\r\n                        setForm({ ...form, password: event.target.value })\r\n                    }}\r\n                />\r\n            </div>\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"login\"\r\n                shape=\"round\"\r\n                className=\"login-form-button\"\r\n                onClick={handleRegister}\r\n                disabled={!validateForm()}\r\n            >Registracija\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction TaskForm({ form, type }) {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form style={{ width: \"50%\", minWidth: \"300px\" }} onSubmit={handleSubmit}>\r\n      <Form.Item label=\"naslov\" hasFeedback>\r\n        {getFieldDecorator(\"title\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite naslov!\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"file-text\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"opis\" hasFeedback>\r\n      {getFieldDecorator(\"description\", {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: \"Prosimo vnesite opis!\"\r\n            }\r\n          ]\r\n        })(\r\n            <TextArea rows={4} />\r\n        )}\r\n        \r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          icon=\"file\"\r\n          shape=\"round\"\r\n          htmlType=\"submit\"\r\n          className=\"login-form-button\"\r\n        >\r\n          {type == \"edit\" ? \"Posodobi\" : \"Dodaj\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Form.create({ name: \"task\" })(TaskForm);\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon, Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n        <div>indepth view for point</div>\r\n    </>\r\n  );\r\n}\r\n","import { Router, Switch } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Route from './routewrapper';\r\n\r\n//rotes import\r\nimport Login from \"./../containers/Login\";\r\nimport Points from \"./../containers/Points\";\r\nimport Admins from \"./../containers/Admins\";\r\nimport Tasks from \"./../containers/Tasks\";\r\nimport Documentation from \"./../containers/Documentation\";\r\n\r\n//import forms\r\nimport FPoint from \"./../forms/fPoint\";\r\nimport FAdmin from \"./../forms/fAdmin\";\r\nimport FTask from \"./../forms/fTask\";\r\n\r\n//import detail views\r\nimport DPoint from \"./../detailed/dpoint\";\r\n\r\nexport default function () {\r\n    const _R = [\r\n        // auth route\r\n        { path: \"/login\", component: <Login />, authRequired: false },\r\n\r\n        // common routes\r\n        { path: \"/points\", component: <Points />, authRequired: true },\r\n        { path: \"/admins\", component: <Admins />, authRequired: true },\r\n        // { path: \"/documentation\", component: <Documentation />, authRequired: false },\r\n        // { path: \"/tasks\", component: <Tasks />, authRequired: true },\r\n\r\n        // form routes\r\n        { path: \"/new/point\", component: <FPoint {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/new/admin\", component: <FAdmin {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/new/task\", component: <FTask {...{ type: \"new\" }} />, authRequired: true },\r\n        { path: \"/edit/point/:id\", component: <FPoint {...{ type: \"edit\" }} />, authRequired: true },\r\n        { path: \"/edit/admin/:id\", component: <FAdmin {...{ type: \"edit\" }} />, authRequired: true },\r\n        // { path: \"/edit/task/:id\", component: <FTask {...{ type: \"edit\" }} />, authRequired: true },\r\n\r\n        // detailed view routes\r\n        { path: \"/details/point/:id\", component: <DPoint />, authRequired: true }\r\n    ];\r\n\r\n    return (\r\n        <Switch>\r\n            {_R.map(({ path, component, authRequired }, index) => (\r\n                <Route key={index} path={path} isPrivate={authRequired || false} >{component}</Route>\r\n            ))}\r\n        </Switch>\r\n    );\r\n}\r\n","import KoisLogo from \"./../images/scvlogo.png\";\r\nimport ScvLogo from \"./../images/koislogo.png\";\r\nimport React from \"react\";\r\n\r\nexport default function() {\r\n  return (\r\n    <>\r\n      <div style={{ padding: 20 }}>\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            marginBottom: 15\r\n          }}\r\n          src={KoisLogo}\r\n        />\r\n        <img\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 15,\r\n            paddingBottom: 0\r\n          }}\r\n          src={ScvLogo}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Icon } from \"antd\";\r\nimport React from 'react';\r\n\r\n// ONLY USED IN app.js !!!!!\r\n// otherwise we use buttonlink.js\r\n\r\nexport default function({ title, link, icon }) {\r\n    return (\r\n        <>\r\n            <Link to={link} />\r\n            <Icon type={icon} />\r\n            <span>{title}</span>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item key=\"/admins\">\r\n        <KoisLink\r\n          {...{ link: \"/admins\", title: \"Administratorji\", icon: \"user\" }}\r\n        />\r\n      </Menu.Item>\r\n      {/*<Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n        </Menu.Item>*/}\r\n      {/*<Menu.Item key=\"/tasks\">\r\n        <KoisLink {...{ link: \"/tasks\", title: \"Zahtevki\", icon: \"pushpin\" }} />\r\n      </Menu.Item>*/}\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Odjava\", icon: \"logout\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Menu } from 'antd';\r\nimport KoisLink from './../common/link';\r\n\r\nexport default function() {\r\n  return (\r\n    <Menu theme=\"dark\" style={{ background: \"#345\" }} mode=\"inline\">\r\n      <Menu.Item key=\"/points\">\r\n        <KoisLink\r\n          {...{ link: \"/points\", title: \"Točke\", icon: \"environment\" }}\r\n        />\r\n      </Menu.Item>\r\n    {/*<Menu.Item key=\"/documentation\">\r\n        <KoisLink\r\n          {...{\r\n            link: \"/documentation\",\r\n            title: \"Dokumentacija\",\r\n            icon: \"file-search\"\r\n          }}\r\n        />\r\n      </Menu.Item>*/}\r\n      <Menu.Item key=\"/login\">\r\n        <KoisLink {...{ link: \"/login\", title: \"Prijava\", icon: \"login\" }} />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from \"antd\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport KoisHistory from './history';\r\n\r\nimport KoisRouter from \"./common/router\";\r\nimport KoisLogos from \"./common/logos\";\r\n\r\n//import navigation\r\nimport IsAuthNav from \"./navs/isauth\";\r\nimport NonAuthNav from \"./navs/nonauth\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default function() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [isAuth, setAuth] = useState(localStorage.getItem(\"_kToken\") || undefined);\r\n\r\n  return (\r\n    <Router history={KoisHistory}>\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <BrowserRouter>\r\n        <Sider\r\n          style={{ background: \"#345\" }}\r\n          width={\"300\"}\r\n          collapsible\r\n          collapsed={collapsed}\r\n          onCollapse={setCollapsed}\r\n        >\r\n          {!collapsed && <KoisLogos />}\r\n          {isAuth ? <IsAuthNav /> : <NonAuthNav/>}\r\n        </Sider>\r\n        <Layout>\r\n          <Header\r\n            style={{\r\n              background: \"#002140\",\r\n              padding: 10,\r\n              borderLeft: \"1px solid white\",\r\n              boxShadow: \"0 4px 2px -2px gray\"\r\n            }}\r\n          >\r\n            <Title style={{ color: \"#fff\" }}>\r\n              <Icon type=\"dashboard\" /> Kois Administracija\r\n            </Title>\r\n          </Header>\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\r\n            <div\r\n              id=\"container\"\r\n              style={{ padding: 24, background: \"#fff\", minHeight: \"40vh\" }}\r\n            >\r\n              <KoisRouter />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\" }}>\r\n            Samo Pritrznik & Janez Sedeljsak 2019/20 ©\r\n          </Footer>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </Layout>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<AppContainer />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}